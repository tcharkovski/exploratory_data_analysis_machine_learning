{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# loading the necessary libraries and the data from the local directory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "from pprint import pprint\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import pickle\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.set_option('display.max_columns', 40)\n",
    "pd.set_option('display.max_colwidth', -1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data = pd.read_csv('ml_case_training_data.csv')\n",
    "train_hist = pd.read_csv('ml_case_training_hist_data.csv')\n",
    "train_output = pd.read_csv('ml_case_training_output.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>activity_new</th>\n",
       "      <th>campaign_disc_ele</th>\n",
       "      <th>channel_sales</th>\n",
       "      <th>cons_12m</th>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <th>cons_last_month</th>\n",
       "      <th>date_activ</th>\n",
       "      <th>date_end</th>\n",
       "      <th>date_first_activ</th>\n",
       "      <th>date_modif_prod</th>\n",
       "      <th>date_renewal</th>\n",
       "      <th>forecast_base_bill_ele</th>\n",
       "      <th>forecast_base_bill_year</th>\n",
       "      <th>forecast_bill_12m</th>\n",
       "      <th>forecast_cons</th>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <th>forecast_cons_year</th>\n",
       "      <th>forecast_discount_energy</th>\n",
       "      <th>forecast_meter_rent_12m</th>\n",
       "      <th>forecast_price_energy_p1</th>\n",
       "      <th>forecast_price_energy_p2</th>\n",
       "      <th>forecast_price_pow_p1</th>\n",
       "      <th>has_gas</th>\n",
       "      <th>imp_cons</th>\n",
       "      <th>margin_gross_pow_ele</th>\n",
       "      <th>margin_net_pow_ele</th>\n",
       "      <th>nb_prod_act</th>\n",
       "      <th>net_margin</th>\n",
       "      <th>num_years_antig</th>\n",
       "      <th>origin_up</th>\n",
       "      <th>pow_max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>esoiiifxdlbkcsluxmfuacbdckommixw</td>\n",
       "      <td>NaN</td>\n",
       "      <td>lmkebamcaaclubfxadlmueccxoimlema</td>\n",
       "      <td>309275</td>\n",
       "      <td>0</td>\n",
       "      <td>10025</td>\n",
       "      <td>2012-11-07</td>\n",
       "      <td>2016-11-06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2012-11-07</td>\n",
       "      <td>2015-11-09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26520.30</td>\n",
       "      <td>10025</td>\n",
       "      <td>0.0</td>\n",
       "      <td>359.29</td>\n",
       "      <td>0.095919</td>\n",
       "      <td>0.088347</td>\n",
       "      <td>58.995952</td>\n",
       "      <td>f</td>\n",
       "      <td>831.8</td>\n",
       "      <td>-41.76</td>\n",
       "      <td>-41.76</td>\n",
       "      <td>1</td>\n",
       "      <td>1732.36</td>\n",
       "      <td>3</td>\n",
       "      <td>ldkssxwpmemidmecebumciepifcamkci</td>\n",
       "      <td>180.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24011ae4ebbe3035111d65fa7c15bc57</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>foosdfpfkusacimwkcsosbicdxkicaua</td>\n",
       "      <td>0</td>\n",
       "      <td>54946</td>\n",
       "      <td>0</td>\n",
       "      <td>2013-06-15</td>\n",
       "      <td>2016-06-15</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2015-06-23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.78</td>\n",
       "      <td>0.114481</td>\n",
       "      <td>0.098142</td>\n",
       "      <td>40.606701</td>\n",
       "      <td>t</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.44</td>\n",
       "      <td>25.44</td>\n",
       "      <td>2</td>\n",
       "      <td>678.99</td>\n",
       "      <td>3</td>\n",
       "      <td>lxidpiddsbxsbosboudacockeimpuepw</td>\n",
       "      <td>43.648</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>d29c2c54acc38ff3c0614d0a653813dd</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4660</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2009-08-21</td>\n",
       "      <td>2016-08-30</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2009-08-21</td>\n",
       "      <td>2015-08-31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.95</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.27</td>\n",
       "      <td>0.145711</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.311378</td>\n",
       "      <td>f</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.38</td>\n",
       "      <td>16.38</td>\n",
       "      <td>1</td>\n",
       "      <td>18.89</td>\n",
       "      <td>6</td>\n",
       "      <td>kamkkxfxxuwbdslkwifmmcsiusiuosws</td>\n",
       "      <td>13.800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>764c75f661154dac3a6c254cd082ea7d</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>foosdfpfkusacimwkcsosbicdxkicaua</td>\n",
       "      <td>544</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2010-04-16</td>\n",
       "      <td>2016-04-16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2010-04-16</td>\n",
       "      <td>2015-04-17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47.96</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.72</td>\n",
       "      <td>0.165794</td>\n",
       "      <td>0.087899</td>\n",
       "      <td>44.311378</td>\n",
       "      <td>f</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.60</td>\n",
       "      <td>28.60</td>\n",
       "      <td>1</td>\n",
       "      <td>6.60</td>\n",
       "      <td>6</td>\n",
       "      <td>kamkkxfxxuwbdslkwifmmcsiusiuosws</td>\n",
       "      <td>13.856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>bba03439a292a1e166f80264c16191cb</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>lmkebamcaaclubfxadlmueccxoimlema</td>\n",
       "      <td>1584</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2010-03-30</td>\n",
       "      <td>2016-03-30</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2010-03-30</td>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>240.04</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.83</td>\n",
       "      <td>0.146694</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.311378</td>\n",
       "      <td>f</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.22</td>\n",
       "      <td>30.22</td>\n",
       "      <td>1</td>\n",
       "      <td>25.46</td>\n",
       "      <td>6</td>\n",
       "      <td>kamkkxfxxuwbdslkwifmmcsiusiuosws</td>\n",
       "      <td>13.200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 id                      activity_new  \\\n",
       "0  48ada52261e7cf58715202705a0451c9  esoiiifxdlbkcsluxmfuacbdckommixw   \n",
       "1  24011ae4ebbe3035111d65fa7c15bc57  NaN                                \n",
       "2  d29c2c54acc38ff3c0614d0a653813dd  NaN                                \n",
       "3  764c75f661154dac3a6c254cd082ea7d  NaN                                \n",
       "4  bba03439a292a1e166f80264c16191cb  NaN                                \n",
       "\n",
       "   campaign_disc_ele                     channel_sales  cons_12m  \\\n",
       "0 NaN                 lmkebamcaaclubfxadlmueccxoimlema  309275     \n",
       "1 NaN                 foosdfpfkusacimwkcsosbicdxkicaua  0          \n",
       "2 NaN                 NaN                               4660       \n",
       "3 NaN                 foosdfpfkusacimwkcsosbicdxkicaua  544        \n",
       "4 NaN                 lmkebamcaaclubfxadlmueccxoimlema  1584       \n",
       "\n",
       "   cons_gas_12m  cons_last_month  date_activ    date_end date_first_activ  \\\n",
       "0  0             10025            2012-11-07  2016-11-06  NaN               \n",
       "1  54946         0                2013-06-15  2016-06-15  NaN               \n",
       "2  0             0                2009-08-21  2016-08-30  NaN               \n",
       "3  0             0                2010-04-16  2016-04-16  NaN               \n",
       "4  0             0                2010-03-30  2016-03-30  NaN               \n",
       "\n",
       "  date_modif_prod date_renewal  forecast_base_bill_ele  \\\n",
       "0  2012-11-07      2015-11-09  NaN                       \n",
       "1  NaN             2015-06-23  NaN                       \n",
       "2  2009-08-21      2015-08-31  NaN                       \n",
       "3  2010-04-16      2015-04-17  NaN                       \n",
       "4  2010-03-30      2015-03-31  NaN                       \n",
       "\n",
       "   forecast_base_bill_year  forecast_bill_12m  forecast_cons  \\\n",
       "0 NaN                      NaN                NaN              \n",
       "1 NaN                      NaN                NaN              \n",
       "2 NaN                      NaN                NaN              \n",
       "3 NaN                      NaN                NaN              \n",
       "4 NaN                      NaN                NaN              \n",
       "\n",
       "   forecast_cons_12m  forecast_cons_year  forecast_discount_energy  \\\n",
       "0  26520.30           10025               0.0                        \n",
       "1  0.00               0                   0.0                        \n",
       "2  189.95             0                   0.0                        \n",
       "3  47.96              0                   0.0                        \n",
       "4  240.04             0                   0.0                        \n",
       "\n",
       "   forecast_meter_rent_12m  forecast_price_energy_p1  \\\n",
       "0  359.29                   0.095919                   \n",
       "1  1.78                     0.114481                   \n",
       "2  16.27                    0.145711                   \n",
       "3  38.72                    0.165794                   \n",
       "4  19.83                    0.146694                   \n",
       "\n",
       "   forecast_price_energy_p2  forecast_price_pow_p1 has_gas  imp_cons  \\\n",
       "0  0.088347                  58.995952              f       831.8      \n",
       "1  0.098142                  40.606701              t       0.0        \n",
       "2  0.000000                  44.311378              f       0.0        \n",
       "3  0.087899                  44.311378              f       0.0        \n",
       "4  0.000000                  44.311378              f       0.0        \n",
       "\n",
       "   margin_gross_pow_ele  margin_net_pow_ele  nb_prod_act  net_margin  \\\n",
       "0 -41.76                -41.76               1            1732.36      \n",
       "1  25.44                 25.44               2            678.99       \n",
       "2  16.38                 16.38               1            18.89        \n",
       "3  28.60                 28.60               1            6.60         \n",
       "4  30.22                 30.22               1            25.46        \n",
       "\n",
       "   num_years_antig                         origin_up  pow_max  \n",
       "0  3                ldkssxwpmemidmecebumciepifcamkci  180.000  \n",
       "1  3                lxidpiddsbxsbosboudacockeimpuepw  43.648   \n",
       "2  6                kamkkxfxxuwbdslkwifmmcsiusiuosws  13.800   \n",
       "3  6                kamkkxfxxuwbdslkwifmmcsiusiuosws  13.856   \n",
       "4  6                kamkkxfxxuwbdslkwifmmcsiusiuosws  13.200   "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>price_date</th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-01-01</td>\n",
       "      <td>0.151367</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-02-01</td>\n",
       "      <td>0.151367</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-03-01</td>\n",
       "      <td>0.151367</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-04-01</td>\n",
       "      <td>0.149626</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-05-01</td>\n",
       "      <td>0.149626</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 id  price_date  price_p1_var  price_p2_var  \\\n",
       "0  038af19179925da21a25619c5a24b745  2015-01-01  0.151367      0.0            \n",
       "1  038af19179925da21a25619c5a24b745  2015-02-01  0.151367      0.0            \n",
       "2  038af19179925da21a25619c5a24b745  2015-03-01  0.151367      0.0            \n",
       "3  038af19179925da21a25619c5a24b745  2015-04-01  0.149626      0.0            \n",
       "4  038af19179925da21a25619c5a24b745  2015-05-01  0.149626      0.0            \n",
       "\n",
       "   price_p3_var  price_p1_fix  price_p2_fix  price_p3_fix  \n",
       "0  0.0           44.266931     0.0           0.0           \n",
       "1  0.0           44.266931     0.0           0.0           \n",
       "2  0.0           44.266931     0.0           0.0           \n",
       "3  0.0           44.266931     0.0           0.0           \n",
       "4  0.0           44.266931     0.0           0.0           "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_hist.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "train_output.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [],
   "source": [
    "train_hist_bymean = train_hist.groupby('id').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0002203ffbb812588b632b9e628cc38d</th>\n",
       "      <td>0.124338</td>\n",
       "      <td>0.103794</td>\n",
       "      <td>0.073160</td>\n",
       "      <td>40.701732</td>\n",
       "      <td>24.421038</td>\n",
       "      <td>16.280694</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0004351ebdd665e6ee664792efc4fd13</th>\n",
       "      <td>0.146426</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.385450</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0010bcc39e42b3c2131ed2ce55246e3c</th>\n",
       "      <td>0.181558</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>45.319710</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0010ee3855fdea87602a5b7aba8e42de</th>\n",
       "      <td>0.118757</td>\n",
       "      <td>0.098292</td>\n",
       "      <td>0.069032</td>\n",
       "      <td>40.647427</td>\n",
       "      <td>24.388455</td>\n",
       "      <td>16.258971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>00114d74e963e47177db89bc70108537</th>\n",
       "      <td>0.147926</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.266930</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  price_p1_var  price_p2_var  price_p3_var  \\\n",
       "id                                                                           \n",
       "0002203ffbb812588b632b9e628cc38d  0.124338      0.103794      0.073160       \n",
       "0004351ebdd665e6ee664792efc4fd13  0.146426      0.000000      0.000000       \n",
       "0010bcc39e42b3c2131ed2ce55246e3c  0.181558      0.000000      0.000000       \n",
       "0010ee3855fdea87602a5b7aba8e42de  0.118757      0.098292      0.069032       \n",
       "00114d74e963e47177db89bc70108537  0.147926      0.000000      0.000000       \n",
       "\n",
       "                                  price_p1_fix  price_p2_fix  price_p3_fix  \n",
       "id                                                                          \n",
       "0002203ffbb812588b632b9e628cc38d  40.701732     24.421038     16.280694     \n",
       "0004351ebdd665e6ee664792efc4fd13  44.385450     0.000000      0.000000      \n",
       "0010bcc39e42b3c2131ed2ce55246e3c  45.319710     0.000000      0.000000      \n",
       "0010ee3855fdea87602a5b7aba8e42de  40.647427     24.388455     16.258971     \n",
       "00114d74e963e47177db89bc70108537  44.266930     0.000000      0.000000      "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_hist_bymean.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# merge all the three datas; training_data, training_hist_data, training_output\n",
    "data = pd.merge(train_data, train_hist_bymean, on = 'id')\n",
    "data = pd.merge(data, train_output, on = 'id')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# inpecting the data for missing values, outliers and useless columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>activity_new</th>\n",
       "      <th>campaign_disc_ele</th>\n",
       "      <th>channel_sales</th>\n",
       "      <th>cons_12m</th>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <th>cons_last_month</th>\n",
       "      <th>date_activ</th>\n",
       "      <th>date_end</th>\n",
       "      <th>date_first_activ</th>\n",
       "      <th>date_modif_prod</th>\n",
       "      <th>date_renewal</th>\n",
       "      <th>forecast_base_bill_ele</th>\n",
       "      <th>forecast_base_bill_year</th>\n",
       "      <th>forecast_bill_12m</th>\n",
       "      <th>forecast_cons</th>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <th>forecast_cons_year</th>\n",
       "      <th>forecast_discount_energy</th>\n",
       "      <th>forecast_meter_rent_12m</th>\n",
       "      <th>forecast_price_energy_p1</th>\n",
       "      <th>forecast_price_energy_p2</th>\n",
       "      <th>forecast_price_pow_p1</th>\n",
       "      <th>has_gas</th>\n",
       "      <th>imp_cons</th>\n",
       "      <th>margin_gross_pow_ele</th>\n",
       "      <th>margin_net_pow_ele</th>\n",
       "      <th>nb_prod_act</th>\n",
       "      <th>net_margin</th>\n",
       "      <th>num_years_antig</th>\n",
       "      <th>origin_up</th>\n",
       "      <th>pow_max</th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>esoiiifxdlbkcsluxmfuacbdckommixw</td>\n",
       "      <td>NaN</td>\n",
       "      <td>lmkebamcaaclubfxadlmueccxoimlema</td>\n",
       "      <td>309275</td>\n",
       "      <td>0</td>\n",
       "      <td>10025</td>\n",
       "      <td>2012-11-07</td>\n",
       "      <td>2016-11-06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2012-11-07</td>\n",
       "      <td>2015-11-09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26520.30</td>\n",
       "      <td>10025</td>\n",
       "      <td>0.0</td>\n",
       "      <td>359.29</td>\n",
       "      <td>0.095919</td>\n",
       "      <td>0.088347</td>\n",
       "      <td>58.995952</td>\n",
       "      <td>f</td>\n",
       "      <td>831.8</td>\n",
       "      <td>-41.76</td>\n",
       "      <td>-41.76</td>\n",
       "      <td>1</td>\n",
       "      <td>1732.36</td>\n",
       "      <td>3</td>\n",
       "      <td>ldkssxwpmemidmecebumciepifcamkci</td>\n",
       "      <td>180.000</td>\n",
       "      <td>0.103449</td>\n",
       "      <td>0.092115</td>\n",
       "      <td>0.067241</td>\n",
       "      <td>58.956502</td>\n",
       "      <td>36.356887</td>\n",
       "      <td>8.337051</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24011ae4ebbe3035111d65fa7c15bc57</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>foosdfpfkusacimwkcsosbicdxkicaua</td>\n",
       "      <td>0</td>\n",
       "      <td>54946</td>\n",
       "      <td>0</td>\n",
       "      <td>2013-06-15</td>\n",
       "      <td>2016-06-15</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2015-06-23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.78</td>\n",
       "      <td>0.114481</td>\n",
       "      <td>0.098142</td>\n",
       "      <td>40.606701</td>\n",
       "      <td>t</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.44</td>\n",
       "      <td>25.44</td>\n",
       "      <td>2</td>\n",
       "      <td>678.99</td>\n",
       "      <td>3</td>\n",
       "      <td>lxidpiddsbxsbosboudacockeimpuepw</td>\n",
       "      <td>43.648</td>\n",
       "      <td>0.122856</td>\n",
       "      <td>0.102137</td>\n",
       "      <td>0.072579</td>\n",
       "      <td>40.640023</td>\n",
       "      <td>24.384011</td>\n",
       "      <td>16.256008</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>d29c2c54acc38ff3c0614d0a653813dd</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4660</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2009-08-21</td>\n",
       "      <td>2016-08-30</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2009-08-21</td>\n",
       "      <td>2015-08-31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>189.95</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.27</td>\n",
       "      <td>0.145711</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.311378</td>\n",
       "      <td>f</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.38</td>\n",
       "      <td>16.38</td>\n",
       "      <td>1</td>\n",
       "      <td>18.89</td>\n",
       "      <td>6</td>\n",
       "      <td>kamkkxfxxuwbdslkwifmmcsiusiuosws</td>\n",
       "      <td>13.800</td>\n",
       "      <td>0.149934</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.315416</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>764c75f661154dac3a6c254cd082ea7d</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>foosdfpfkusacimwkcsosbicdxkicaua</td>\n",
       "      <td>544</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2010-04-16</td>\n",
       "      <td>2016-04-16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2010-04-16</td>\n",
       "      <td>2015-04-17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47.96</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>38.72</td>\n",
       "      <td>0.165794</td>\n",
       "      <td>0.087899</td>\n",
       "      <td>44.311378</td>\n",
       "      <td>f</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.60</td>\n",
       "      <td>28.60</td>\n",
       "      <td>1</td>\n",
       "      <td>6.60</td>\n",
       "      <td>6</td>\n",
       "      <td>kamkkxfxxuwbdslkwifmmcsiusiuosws</td>\n",
       "      <td>13.856</td>\n",
       "      <td>0.170512</td>\n",
       "      <td>0.088421</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.385450</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>bba03439a292a1e166f80264c16191cb</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>lmkebamcaaclubfxadlmueccxoimlema</td>\n",
       "      <td>1584</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2010-03-30</td>\n",
       "      <td>2016-03-30</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2010-03-30</td>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>240.04</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.83</td>\n",
       "      <td>0.146694</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.311378</td>\n",
       "      <td>f</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.22</td>\n",
       "      <td>30.22</td>\n",
       "      <td>1</td>\n",
       "      <td>25.46</td>\n",
       "      <td>6</td>\n",
       "      <td>kamkkxfxxuwbdslkwifmmcsiusiuosws</td>\n",
       "      <td>13.200</td>\n",
       "      <td>0.151210</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.400265</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 id                      activity_new  \\\n",
       "0  48ada52261e7cf58715202705a0451c9  esoiiifxdlbkcsluxmfuacbdckommixw   \n",
       "1  24011ae4ebbe3035111d65fa7c15bc57  NaN                                \n",
       "2  d29c2c54acc38ff3c0614d0a653813dd  NaN                                \n",
       "3  764c75f661154dac3a6c254cd082ea7d  NaN                                \n",
       "4  bba03439a292a1e166f80264c16191cb  NaN                                \n",
       "\n",
       "   campaign_disc_ele                     channel_sales  cons_12m  \\\n",
       "0 NaN                 lmkebamcaaclubfxadlmueccxoimlema  309275     \n",
       "1 NaN                 foosdfpfkusacimwkcsosbicdxkicaua  0          \n",
       "2 NaN                 NaN                               4660       \n",
       "3 NaN                 foosdfpfkusacimwkcsosbicdxkicaua  544        \n",
       "4 NaN                 lmkebamcaaclubfxadlmueccxoimlema  1584       \n",
       "\n",
       "   cons_gas_12m  cons_last_month  date_activ    date_end date_first_activ  \\\n",
       "0  0             10025            2012-11-07  2016-11-06  NaN               \n",
       "1  54946         0                2013-06-15  2016-06-15  NaN               \n",
       "2  0             0                2009-08-21  2016-08-30  NaN               \n",
       "3  0             0                2010-04-16  2016-04-16  NaN               \n",
       "4  0             0                2010-03-30  2016-03-30  NaN               \n",
       "\n",
       "  date_modif_prod date_renewal  forecast_base_bill_ele  \\\n",
       "0  2012-11-07      2015-11-09  NaN                       \n",
       "1  NaN             2015-06-23  NaN                       \n",
       "2  2009-08-21      2015-08-31  NaN                       \n",
       "3  2010-04-16      2015-04-17  NaN                       \n",
       "4  2010-03-30      2015-03-31  NaN                       \n",
       "\n",
       "   forecast_base_bill_year  forecast_bill_12m  forecast_cons  \\\n",
       "0 NaN                      NaN                NaN              \n",
       "1 NaN                      NaN                NaN              \n",
       "2 NaN                      NaN                NaN              \n",
       "3 NaN                      NaN                NaN              \n",
       "4 NaN                      NaN                NaN              \n",
       "\n",
       "   forecast_cons_12m  forecast_cons_year  forecast_discount_energy  \\\n",
       "0  26520.30           10025               0.0                        \n",
       "1  0.00               0                   0.0                        \n",
       "2  189.95             0                   0.0                        \n",
       "3  47.96              0                   0.0                        \n",
       "4  240.04             0                   0.0                        \n",
       "\n",
       "   forecast_meter_rent_12m  forecast_price_energy_p1  \\\n",
       "0  359.29                   0.095919                   \n",
       "1  1.78                     0.114481                   \n",
       "2  16.27                    0.145711                   \n",
       "3  38.72                    0.165794                   \n",
       "4  19.83                    0.146694                   \n",
       "\n",
       "   forecast_price_energy_p2  forecast_price_pow_p1 has_gas  imp_cons  \\\n",
       "0  0.088347                  58.995952              f       831.8      \n",
       "1  0.098142                  40.606701              t       0.0        \n",
       "2  0.000000                  44.311378              f       0.0        \n",
       "3  0.087899                  44.311378              f       0.0        \n",
       "4  0.000000                  44.311378              f       0.0        \n",
       "\n",
       "   margin_gross_pow_ele  margin_net_pow_ele  nb_prod_act  net_margin  \\\n",
       "0 -41.76                -41.76               1            1732.36      \n",
       "1  25.44                 25.44               2            678.99       \n",
       "2  16.38                 16.38               1            18.89        \n",
       "3  28.60                 28.60               1            6.60         \n",
       "4  30.22                 30.22               1            25.46        \n",
       "\n",
       "   num_years_antig                         origin_up  pow_max  price_p1_var  \\\n",
       "0  3                ldkssxwpmemidmecebumciepifcamkci  180.000  0.103449       \n",
       "1  3                lxidpiddsbxsbosboudacockeimpuepw  43.648   0.122856       \n",
       "2  6                kamkkxfxxuwbdslkwifmmcsiusiuosws  13.800   0.149934       \n",
       "3  6                kamkkxfxxuwbdslkwifmmcsiusiuosws  13.856   0.170512       \n",
       "4  6                kamkkxfxxuwbdslkwifmmcsiusiuosws  13.200   0.151210       \n",
       "\n",
       "   price_p2_var  price_p3_var  price_p1_fix  price_p2_fix  price_p3_fix  churn  \n",
       "0  0.092115      0.067241      58.956502     36.356887     8.337051      0      \n",
       "1  0.102137      0.072579      40.640023     24.384011     16.256008     1      \n",
       "2  0.000000      0.000000      44.315416     0.000000      0.000000      0      \n",
       "3  0.088421      0.000000      44.385450     0.000000      0.000000      0      \n",
       "4  0.000000      0.000000      44.400265     0.000000      0.000000      0      "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>campaign_disc_ele</th>\n",
       "      <th>cons_12m</th>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <th>cons_last_month</th>\n",
       "      <th>forecast_base_bill_ele</th>\n",
       "      <th>forecast_base_bill_year</th>\n",
       "      <th>forecast_bill_12m</th>\n",
       "      <th>forecast_cons</th>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <th>forecast_cons_year</th>\n",
       "      <th>forecast_discount_energy</th>\n",
       "      <th>forecast_meter_rent_12m</th>\n",
       "      <th>forecast_price_energy_p1</th>\n",
       "      <th>forecast_price_energy_p2</th>\n",
       "      <th>forecast_price_pow_p1</th>\n",
       "      <th>imp_cons</th>\n",
       "      <th>margin_gross_pow_ele</th>\n",
       "      <th>margin_net_pow_ele</th>\n",
       "      <th>nb_prod_act</th>\n",
       "      <th>net_margin</th>\n",
       "      <th>num_years_antig</th>\n",
       "      <th>pow_max</th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.609600e+04</td>\n",
       "      <td>1.609600e+04</td>\n",
       "      <td>1.609600e+04</td>\n",
       "      <td>3508.000000</td>\n",
       "      <td>3508.000000</td>\n",
       "      <td>3508.000000</td>\n",
       "      <td>3508.000000</td>\n",
       "      <td>16096.000000</td>\n",
       "      <td>16096.000000</td>\n",
       "      <td>15970.000000</td>\n",
       "      <td>16096.000000</td>\n",
       "      <td>15970.000000</td>\n",
       "      <td>15970.000000</td>\n",
       "      <td>15970.000000</td>\n",
       "      <td>16096.000000</td>\n",
       "      <td>16083.000000</td>\n",
       "      <td>16083.000000</td>\n",
       "      <td>16096.000000</td>\n",
       "      <td>16081.000000</td>\n",
       "      <td>16096.000000</td>\n",
       "      <td>16093.000000</td>\n",
       "      <td>16094.000000</td>\n",
       "      <td>16094.000000</td>\n",
       "      <td>16094.000000</td>\n",
       "      <td>16094.000000</td>\n",
       "      <td>16094.000000</td>\n",
       "      <td>16094.000000</td>\n",
       "      <td>16096.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.948044e+05</td>\n",
       "      <td>3.191164e+04</td>\n",
       "      <td>1.946154e+04</td>\n",
       "      <td>335.843857</td>\n",
       "      <td>335.843857</td>\n",
       "      <td>3837.441866</td>\n",
       "      <td>206.845165</td>\n",
       "      <td>2370.555949</td>\n",
       "      <td>1907.347229</td>\n",
       "      <td>0.991547</td>\n",
       "      <td>70.309945</td>\n",
       "      <td>0.135901</td>\n",
       "      <td>0.052951</td>\n",
       "      <td>43.533496</td>\n",
       "      <td>196.123447</td>\n",
       "      <td>22.462276</td>\n",
       "      <td>21.460318</td>\n",
       "      <td>1.347788</td>\n",
       "      <td>217.987028</td>\n",
       "      <td>5.030629</td>\n",
       "      <td>20.604131</td>\n",
       "      <td>0.141004</td>\n",
       "      <td>0.054379</td>\n",
       "      <td>0.030695</td>\n",
       "      <td>43.327752</td>\n",
       "      <td>10.691430</td>\n",
       "      <td>6.451230</td>\n",
       "      <td>0.099093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>6.795151e+05</td>\n",
       "      <td>1.775885e+05</td>\n",
       "      <td>8.235676e+04</td>\n",
       "      <td>649.406000</td>\n",
       "      <td>649.406000</td>\n",
       "      <td>5425.744327</td>\n",
       "      <td>455.634288</td>\n",
       "      <td>4035.085664</td>\n",
       "      <td>5257.364759</td>\n",
       "      <td>5.160969</td>\n",
       "      <td>79.023251</td>\n",
       "      <td>0.026252</td>\n",
       "      <td>0.048617</td>\n",
       "      <td>5.212252</td>\n",
       "      <td>494.366979</td>\n",
       "      <td>23.700883</td>\n",
       "      <td>27.917349</td>\n",
       "      <td>1.459808</td>\n",
       "      <td>366.742030</td>\n",
       "      <td>1.676101</td>\n",
       "      <td>21.772421</td>\n",
       "      <td>0.024297</td>\n",
       "      <td>0.049860</td>\n",
       "      <td>0.036220</td>\n",
       "      <td>5.362695</td>\n",
       "      <td>12.825881</td>\n",
       "      <td>7.761357</td>\n",
       "      <td>0.298796</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>-1.252760e+05</td>\n",
       "      <td>-3.037000e+03</td>\n",
       "      <td>-9.138600e+04</td>\n",
       "      <td>-364.940000</td>\n",
       "      <td>-364.940000</td>\n",
       "      <td>-2503.480000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-16689.260000</td>\n",
       "      <td>-85627.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-242.960000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.122184</td>\n",
       "      <td>-9038.210000</td>\n",
       "      <td>-525.540000</td>\n",
       "      <td>-615.660000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-4148.990000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>5.906250e+03</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1158.175000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>513.230000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>16.230000</td>\n",
       "      <td>0.115237</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>40.606701</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11.960000</td>\n",
       "      <td>11.950000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>51.970000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>12.500000</td>\n",
       "      <td>0.123974</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>40.675988</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.533250e+04</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>9.010000e+02</td>\n",
       "      <td>162.955000</td>\n",
       "      <td>162.955000</td>\n",
       "      <td>2187.230000</td>\n",
       "      <td>42.215000</td>\n",
       "      <td>1179.160000</td>\n",
       "      <td>378.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>19.440000</td>\n",
       "      <td>0.142881</td>\n",
       "      <td>0.086163</td>\n",
       "      <td>44.311378</td>\n",
       "      <td>44.465000</td>\n",
       "      <td>21.090000</td>\n",
       "      <td>20.970000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>119.680000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>13.856000</td>\n",
       "      <td>0.147251</td>\n",
       "      <td>0.085946</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>44.281745</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>5.022150e+04</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>4.127000e+03</td>\n",
       "      <td>396.185000</td>\n",
       "      <td>396.185000</td>\n",
       "      <td>4246.555000</td>\n",
       "      <td>228.117500</td>\n",
       "      <td>2692.077500</td>\n",
       "      <td>1994.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>131.470000</td>\n",
       "      <td>0.146348</td>\n",
       "      <td>0.098837</td>\n",
       "      <td>44.311378</td>\n",
       "      <td>218.090000</td>\n",
       "      <td>29.640000</td>\n",
       "      <td>29.640000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>275.810000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>19.800000</td>\n",
       "      <td>0.150316</td>\n",
       "      <td>0.102396</td>\n",
       "      <td>0.072778</td>\n",
       "      <td>44.370635</td>\n",
       "      <td>24.388455</td>\n",
       "      <td>16.248110</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.609711e+07</td>\n",
       "      <td>4.188440e+06</td>\n",
       "      <td>4.538720e+06</td>\n",
       "      <td>12566.080000</td>\n",
       "      <td>12566.080000</td>\n",
       "      <td>81122.630000</td>\n",
       "      <td>9682.890000</td>\n",
       "      <td>103801.930000</td>\n",
       "      <td>175375.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>2411.690000</td>\n",
       "      <td>0.273963</td>\n",
       "      <td>0.195975</td>\n",
       "      <td>59.444710</td>\n",
       "      <td>15042.790000</td>\n",
       "      <td>374.640000</td>\n",
       "      <td>374.640000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>24570.650000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>0.278759</td>\n",
       "      <td>0.196275</td>\n",
       "      <td>0.102952</td>\n",
       "      <td>59.444710</td>\n",
       "      <td>36.490692</td>\n",
       "      <td>16.818917</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       campaign_disc_ele      cons_12m  cons_gas_12m  cons_last_month  \\\n",
       "count  0.0                1.609600e+04  1.609600e+04  1.609600e+04      \n",
       "mean  NaN                 1.948044e+05  3.191164e+04  1.946154e+04      \n",
       "std   NaN                 6.795151e+05  1.775885e+05  8.235676e+04      \n",
       "min   NaN                -1.252760e+05 -3.037000e+03 -9.138600e+04      \n",
       "25%   NaN                 5.906250e+03  0.000000e+00  0.000000e+00      \n",
       "50%   NaN                 1.533250e+04  0.000000e+00  9.010000e+02      \n",
       "75%   NaN                 5.022150e+04  0.000000e+00  4.127000e+03      \n",
       "max   NaN                 1.609711e+07  4.188440e+06  4.538720e+06      \n",
       "\n",
       "       forecast_base_bill_ele  forecast_base_bill_year  forecast_bill_12m  \\\n",
       "count  3508.000000             3508.000000              3508.000000         \n",
       "mean   335.843857              335.843857               3837.441866         \n",
       "std    649.406000              649.406000               5425.744327         \n",
       "min   -364.940000             -364.940000              -2503.480000         \n",
       "25%    0.000000                0.000000                 1158.175000         \n",
       "50%    162.955000              162.955000               2187.230000         \n",
       "75%    396.185000              396.185000               4246.555000         \n",
       "max    12566.080000            12566.080000             81122.630000        \n",
       "\n",
       "       forecast_cons  forecast_cons_12m  forecast_cons_year  \\\n",
       "count  3508.000000    16096.000000       16096.000000         \n",
       "mean   206.845165     2370.555949        1907.347229          \n",
       "std    455.634288     4035.085664        5257.364759          \n",
       "min    0.000000      -16689.260000      -85627.000000         \n",
       "25%    0.000000       513.230000         0.000000             \n",
       "50%    42.215000      1179.160000        378.000000           \n",
       "75%    228.117500     2692.077500        1994.250000          \n",
       "max    9682.890000    103801.930000      175375.000000        \n",
       "\n",
       "       forecast_discount_energy  forecast_meter_rent_12m  \\\n",
       "count  15970.000000              16096.000000              \n",
       "mean   0.991547                  70.309945                 \n",
       "std    5.160969                  79.023251                 \n",
       "min    0.000000                 -242.960000                \n",
       "25%    0.000000                  16.230000                 \n",
       "50%    0.000000                  19.440000                 \n",
       "75%    0.000000                  131.470000                \n",
       "max    50.000000                 2411.690000               \n",
       "\n",
       "       forecast_price_energy_p1  forecast_price_energy_p2  \\\n",
       "count  15970.000000              15970.000000               \n",
       "mean   0.135901                  0.052951                   \n",
       "std    0.026252                  0.048617                   \n",
       "min    0.000000                  0.000000                   \n",
       "25%    0.115237                  0.000000                   \n",
       "50%    0.142881                  0.086163                   \n",
       "75%    0.146348                  0.098837                   \n",
       "max    0.273963                  0.195975                   \n",
       "\n",
       "       forecast_price_pow_p1      imp_cons  margin_gross_pow_ele  \\\n",
       "count  15970.000000           16096.000000  16083.000000           \n",
       "mean   43.533496              196.123447    22.462276              \n",
       "std    5.212252               494.366979    23.700883              \n",
       "min   -0.122184              -9038.210000  -525.540000             \n",
       "25%    40.606701              0.000000      11.960000              \n",
       "50%    44.311378              44.465000     21.090000              \n",
       "75%    44.311378              218.090000    29.640000              \n",
       "max    59.444710              15042.790000  374.640000             \n",
       "\n",
       "       margin_net_pow_ele   nb_prod_act    net_margin  num_years_antig  \\\n",
       "count  16083.000000        16096.000000  16081.000000  16096.000000      \n",
       "mean   21.460318           1.347788      217.987028    5.030629          \n",
       "std    27.917349           1.459808      366.742030    1.676101          \n",
       "min   -615.660000          1.000000     -4148.990000   1.000000          \n",
       "25%    11.950000           1.000000      51.970000     4.000000          \n",
       "50%    20.970000           1.000000      119.680000    5.000000          \n",
       "75%    29.640000           1.000000      275.810000    6.000000          \n",
       "max    374.640000          32.000000     24570.650000  16.000000         \n",
       "\n",
       "            pow_max  price_p1_var  price_p2_var  price_p3_var  price_p1_fix  \\\n",
       "count  16093.000000  16094.000000  16094.000000  16094.000000  16094.000000   \n",
       "mean   20.604131     0.141004      0.054379      0.030695      43.327752      \n",
       "std    21.772421     0.024297      0.049860      0.036220      5.362695       \n",
       "min    1.000000      0.000000      0.000000      0.000000      0.000000       \n",
       "25%    12.500000     0.123974      0.000000      0.000000      40.675988      \n",
       "50%    13.856000     0.147251      0.085946      0.000000      44.281745      \n",
       "75%    19.800000     0.150316      0.102396      0.072778      44.370635      \n",
       "max    500.000000    0.278759      0.196275      0.102952      59.444710      \n",
       "\n",
       "       price_p2_fix  price_p3_fix         churn  \n",
       "count  16094.000000  16094.000000  16096.000000  \n",
       "mean   10.691430     6.451230      0.099093      \n",
       "std    12.825881     7.761357      0.298796      \n",
       "min    0.000000      0.000000      0.000000      \n",
       "25%    0.000000      0.000000      0.000000      \n",
       "50%    0.000000      0.000000      0.000000      \n",
       "75%    24.388455     16.248110     0.000000      \n",
       "max    36.490692     16.818917     1.000000      "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>activity_new</th>\n",
       "      <th>channel_sales</th>\n",
       "      <th>date_activ</th>\n",
       "      <th>date_end</th>\n",
       "      <th>date_first_activ</th>\n",
       "      <th>date_modif_prod</th>\n",
       "      <th>date_renewal</th>\n",
       "      <th>has_gas</th>\n",
       "      <th>origin_up</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>16096</td>\n",
       "      <td>6551</td>\n",
       "      <td>11878</td>\n",
       "      <td>16096</td>\n",
       "      <td>16094</td>\n",
       "      <td>3508</td>\n",
       "      <td>15939</td>\n",
       "      <td>16056</td>\n",
       "      <td>16096</td>\n",
       "      <td>16009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>16096</td>\n",
       "      <td>419</td>\n",
       "      <td>7</td>\n",
       "      <td>1961</td>\n",
       "      <td>371</td>\n",
       "      <td>1133</td>\n",
       "      <td>2307</td>\n",
       "      <td>398</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>1f9593ffe8dfe43ddced0e6a71b979ea</td>\n",
       "      <td>apdekpcbwosbxepsfxclislboipuxpop</td>\n",
       "      <td>foosdfpfkusacimwkcsosbicdxkicaua</td>\n",
       "      <td>2009-08-01</td>\n",
       "      <td>2016-02-01</td>\n",
       "      <td>2009-07-14</td>\n",
       "      <td>2015-11-01</td>\n",
       "      <td>2015-06-23</td>\n",
       "      <td>f</td>\n",
       "      <td>lxidpiddsbxsbosboudacockeimpuepw</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "      <td>1577</td>\n",
       "      <td>7377</td>\n",
       "      <td>99</td>\n",
       "      <td>152</td>\n",
       "      <td>34</td>\n",
       "      <td>592</td>\n",
       "      <td>637</td>\n",
       "      <td>13132</td>\n",
       "      <td>7825</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                      id                      activity_new  \\\n",
       "count   16096                             6551                               \n",
       "unique  16096                             419                                \n",
       "top     1f9593ffe8dfe43ddced0e6a71b979ea  apdekpcbwosbxepsfxclislboipuxpop   \n",
       "freq    1                                 1577                               \n",
       "\n",
       "                           channel_sales  date_activ    date_end  \\\n",
       "count   11878                             16096       16094        \n",
       "unique  7                                 1961        371          \n",
       "top     foosdfpfkusacimwkcsosbicdxkicaua  2009-08-01  2016-02-01   \n",
       "freq    7377                              99          152          \n",
       "\n",
       "       date_first_activ date_modif_prod date_renewal has_gas  \\\n",
       "count   3508             15939           16056        16096    \n",
       "unique  1133             2307            398          2        \n",
       "top     2009-07-14       2015-11-01      2015-06-23   f        \n",
       "freq    34               592             637          13132    \n",
       "\n",
       "                               origin_up  \n",
       "count   16009                             \n",
       "unique  5                                 \n",
       "top     lxidpiddsbxsbosboudacockeimpuepw  \n",
       "freq    7825                              "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe(include=np.object)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 16096 entries, 0 to 16095\n",
      "Data columns (total 39 columns):\n",
      " #   Column                    Non-Null Count  Dtype  \n",
      "---  ------                    --------------  -----  \n",
      " 0   id                        16096 non-null  object \n",
      " 1   activity_new              6551 non-null   object \n",
      " 2   campaign_disc_ele         0 non-null      float64\n",
      " 3   channel_sales             11878 non-null  object \n",
      " 4   cons_12m                  16096 non-null  int64  \n",
      " 5   cons_gas_12m              16096 non-null  int64  \n",
      " 6   cons_last_month           16096 non-null  int64  \n",
      " 7   date_activ                16096 non-null  object \n",
      " 8   date_end                  16094 non-null  object \n",
      " 9   date_first_activ          3508 non-null   object \n",
      " 10  date_modif_prod           15939 non-null  object \n",
      " 11  date_renewal              16056 non-null  object \n",
      " 12  forecast_base_bill_ele    3508 non-null   float64\n",
      " 13  forecast_base_bill_year   3508 non-null   float64\n",
      " 14  forecast_bill_12m         3508 non-null   float64\n",
      " 15  forecast_cons             3508 non-null   float64\n",
      " 16  forecast_cons_12m         16096 non-null  float64\n",
      " 17  forecast_cons_year        16096 non-null  int64  \n",
      " 18  forecast_discount_energy  15970 non-null  float64\n",
      " 19  forecast_meter_rent_12m   16096 non-null  float64\n",
      " 20  forecast_price_energy_p1  15970 non-null  float64\n",
      " 21  forecast_price_energy_p2  15970 non-null  float64\n",
      " 22  forecast_price_pow_p1     15970 non-null  float64\n",
      " 23  has_gas                   16096 non-null  object \n",
      " 24  imp_cons                  16096 non-null  float64\n",
      " 25  margin_gross_pow_ele      16083 non-null  float64\n",
      " 26  margin_net_pow_ele        16083 non-null  float64\n",
      " 27  nb_prod_act               16096 non-null  int64  \n",
      " 28  net_margin                16081 non-null  float64\n",
      " 29  num_years_antig           16096 non-null  int64  \n",
      " 30  origin_up                 16009 non-null  object \n",
      " 31  pow_max                   16093 non-null  float64\n",
      " 32  price_p1_var              16094 non-null  float64\n",
      " 33  price_p2_var              16094 non-null  float64\n",
      " 34  price_p3_var              16094 non-null  float64\n",
      " 35  price_p1_fix              16094 non-null  float64\n",
      " 36  price_p2_fix              16094 non-null  float64\n",
      " 37  price_p3_fix              16094 non-null  float64\n",
      " 38  churn                     16096 non-null  int64  \n",
      "dtypes: float64(22), int64(7), object(10)\n",
      "memory usage: 4.9+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "jupyter": {
     "outputs_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                          0    \n",
       "activity_new                9545 \n",
       "campaign_disc_ele           16096\n",
       "channel_sales               4218 \n",
       "cons_12m                    0    \n",
       "cons_gas_12m                0    \n",
       "cons_last_month             0    \n",
       "date_activ                  0    \n",
       "date_end                    2    \n",
       "date_first_activ            12588\n",
       "date_modif_prod             157  \n",
       "date_renewal                40   \n",
       "forecast_base_bill_ele      12588\n",
       "forecast_base_bill_year     12588\n",
       "forecast_bill_12m           12588\n",
       "forecast_cons               12588\n",
       "forecast_cons_12m           0    \n",
       "forecast_cons_year          0    \n",
       "forecast_discount_energy    126  \n",
       "forecast_meter_rent_12m     0    \n",
       "forecast_price_energy_p1    126  \n",
       "forecast_price_energy_p2    126  \n",
       "forecast_price_pow_p1       126  \n",
       "has_gas                     0    \n",
       "imp_cons                    0    \n",
       "margin_gross_pow_ele        13   \n",
       "margin_net_pow_ele          13   \n",
       "nb_prod_act                 0    \n",
       "net_margin                  15   \n",
       "num_years_antig             0    \n",
       "origin_up                   87   \n",
       "pow_max                     3    \n",
       "price_p1_var                2    \n",
       "price_p2_var                2    \n",
       "price_p3_var                2    \n",
       "price_p1_fix                2    \n",
       "price_p2_fix                2    \n",
       "price_p3_fix                2    \n",
       "churn                       0    \n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking for missing values\n",
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Columns that are considered irrelevant to the analysis given that most of their values are missing\n",
    "drop_column = ['campaign_disc_ele', 'activity_new', \n",
    "               'date_first_activ', 'forecast_base_bill_ele', 'forecast_base_bill_year', \n",
    "              'forecast_bill_12m', 'forecast_cons']\n",
    "data_clean = data.drop(drop_column, 1)\n",
    "data_clean.set_index(keys = 'id', inplace = True)\n",
    "data_clean.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Removing columns with more than half empty values.\n",
    "half_count = len(data) / 2\n",
    "data2 = data.dropna(thresh=half_count, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Creating a dictionary that explains the column\n",
    "data_dictionary = {\n",
    "'id': 'contact id',\n",
    "'activity_new': 'category of the company\\'s activity',\n",
    "'campaign_disc_ele': 'code of the electricity campaign the customer last subscribed to',\n",
    "'channel_sales': 'code of the sales channel',\n",
    "'cons_12m': 'electricity consumption of the past 12 months',\n",
    "'cons_gas_12m': 'gas consumption of the past 12 months',\n",
    "'cons_last_month': 'electricity consumption of the last month',\n",
    "'date_activ': 'date of activation of the contract',\n",
    "'date_end': 'registered date of the end of the contract',\n",
    "'date_first_activ': 'date of first contract of the client',\n",
    "'date_modif_prod': 'date of last modification of the product',\n",
    "'date_renewal': 'date of the next contract renewal',\n",
    "'forecast_base_bill_ele': 'forecasted electricity bill baseline for next month',\n",
    "'forecast_base_bill_year': 'forecasted electricity bill baseline for calendar year',\n",
    "'forecast_bill_12m': 'forecasted electricity bill baseline for 12 months',\n",
    "'forecast_cons': 'forecasted electricity consumption for next month',\n",
    "'forecast_cons_12m': 'forecasted electricity consumption for next 12 months',\n",
    "'forecast_cons_year': 'forecasted electricity consumption for next calendar year',\n",
    "'forecast_discount_energy': 'forecasted value of current discount',\n",
    "'forecast_meter_rent_12m': 'forecasted bill of meter rental for the next 12 months',\n",
    "'forecast_price_energy_p1': 'forecasted energy price for 1st period',\n",
    "'forecast_price_energy_p2': 'forecasted energy price for 2nd period',\n",
    "'forecast_price_pow_p1': 'forecasted power price for 1st period',\n",
    "'has_gas': 'indicated if client is also a gas client',\n",
    "'imp_cons': 'current paid consumption',\n",
    "'margin_gross_pow_ele': 'gross margin on power subscription',\n",
    "'margin_net_pow_ele': 'net margin on power subscription',\n",
    "'nb_prod_act': 'number of active products and services',\n",
    "'net_margin': 'total net margin',\n",
    "'num_years_antig': 'antiquity of the client (in number of years)',\n",
    "'origin_up': 'code of the electricity campaign the customer first subscribed to',\n",
    "'pow_max': 'subscribed power',\n",
    "'price_date': 'reference date',\n",
    "'price_p1_var': 'price of energy for the 1st period',\n",
    "'price_p2_var': 'price of energy for the 2nd period',\n",
    "'price_p3_var': 'price of energy for the 3rd period',\n",
    "'price_p1_fix': 'price of power for the 1st period',\n",
    "'price_p2_fix': 'price of power for the 2nd period',\n",
    "'price_p3_fix': 'price of power for the 3rd period',\n",
    "'churn': 'has the client churned over the next 3 months'\n",
    "                  }"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "dictionary = pd.DataFrame(data_dictionary.items(), columns=['name', 'description'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>id</td>\n",
       "      <td>contact id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>activity_new</td>\n",
       "      <td>category of the company's activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>campaign_disc_ele</td>\n",
       "      <td>code of the electricity campaign the customer last subscribed to</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>channel_sales</td>\n",
       "      <td>code of the sales channel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cons_12m</td>\n",
       "      <td>electricity consumption of the past 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>cons_gas_12m</td>\n",
       "      <td>gas consumption of the past 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>cons_last_month</td>\n",
       "      <td>electricity consumption of the last month</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>date_activ</td>\n",
       "      <td>date of activation of the contract</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>date_end</td>\n",
       "      <td>registered date of the end of the contract</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>date_first_activ</td>\n",
       "      <td>date of first contract of the client</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>date_modif_prod</td>\n",
       "      <td>date of last modification of the product</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>date_renewal</td>\n",
       "      <td>date of the next contract renewal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>forecast_base_bill_ele</td>\n",
       "      <td>forecasted electricity bill baseline for next month</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>forecast_base_bill_year</td>\n",
       "      <td>forecasted electricity bill baseline for calendar year</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>forecast_bill_12m</td>\n",
       "      <td>forecasted electricity bill baseline for 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>forecast_cons</td>\n",
       "      <td>forecasted electricity consumption for next month</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>forecast_cons_12m</td>\n",
       "      <td>forecasted electricity consumption for next 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>forecast_cons_year</td>\n",
       "      <td>forecasted electricity consumption for next calendar year</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>forecast_discount_energy</td>\n",
       "      <td>forecasted value of current discount</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>forecast_meter_rent_12m</td>\n",
       "      <td>forecasted bill of meter rental for the next 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>forecast_price_energy_p1</td>\n",
       "      <td>forecasted energy price for 1st period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>forecast_price_energy_p2</td>\n",
       "      <td>forecasted energy price for 2nd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>forecast_price_pow_p1</td>\n",
       "      <td>forecasted power price for 1st period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>has_gas</td>\n",
       "      <td>indicated if client is also a gas client</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>imp_cons</td>\n",
       "      <td>current paid consumption</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>margin_gross_pow_ele</td>\n",
       "      <td>gross margin on power subscription</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>margin_net_pow_ele</td>\n",
       "      <td>net margin on power subscription</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>nb_prod_act</td>\n",
       "      <td>number of active products and services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>net_margin</td>\n",
       "      <td>total net margin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>num_years_antig</td>\n",
       "      <td>antiquity of the client (in number of years)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>origin_up</td>\n",
       "      <td>code of the electricity campaign the customer first subscribed to</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>pow_max</td>\n",
       "      <td>subscribed power</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>price_date</td>\n",
       "      <td>reference date</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>price_p1_var</td>\n",
       "      <td>price of energy for the 1st period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>price_p2_var</td>\n",
       "      <td>price of energy for the 2nd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>price_p3_var</td>\n",
       "      <td>price of energy for the 3rd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>price_p1_fix</td>\n",
       "      <td>price of power for the 1st period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>price_p2_fix</td>\n",
       "      <td>price of power for the 2nd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>price_p3_fix</td>\n",
       "      <td>price of power for the 3rd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>churn</td>\n",
       "      <td>has the client churned over the next 3 months</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        name  \\\n",
       "0   id                         \n",
       "1   activity_new               \n",
       "2   campaign_disc_ele          \n",
       "3   channel_sales              \n",
       "4   cons_12m                   \n",
       "5   cons_gas_12m               \n",
       "6   cons_last_month            \n",
       "7   date_activ                 \n",
       "8   date_end                   \n",
       "9   date_first_activ           \n",
       "10  date_modif_prod            \n",
       "11  date_renewal               \n",
       "12  forecast_base_bill_ele     \n",
       "13  forecast_base_bill_year    \n",
       "14  forecast_bill_12m          \n",
       "15  forecast_cons              \n",
       "16  forecast_cons_12m          \n",
       "17  forecast_cons_year         \n",
       "18  forecast_discount_energy   \n",
       "19  forecast_meter_rent_12m    \n",
       "20  forecast_price_energy_p1   \n",
       "21  forecast_price_energy_p2   \n",
       "22  forecast_price_pow_p1      \n",
       "23  has_gas                    \n",
       "24  imp_cons                   \n",
       "25  margin_gross_pow_ele       \n",
       "26  margin_net_pow_ele         \n",
       "27  nb_prod_act                \n",
       "28  net_margin                 \n",
       "29  num_years_antig            \n",
       "30  origin_up                  \n",
       "31  pow_max                    \n",
       "32  price_date                 \n",
       "33  price_p1_var               \n",
       "34  price_p2_var               \n",
       "35  price_p3_var               \n",
       "36  price_p1_fix               \n",
       "37  price_p2_fix               \n",
       "38  price_p3_fix               \n",
       "39  churn                      \n",
       "\n",
       "                                                          description  \n",
       "0   contact id                                                         \n",
       "1   category of the company's activity                                 \n",
       "2   code of the electricity campaign the customer last subscribed to   \n",
       "3   code of the sales channel                                          \n",
       "4   electricity consumption of the past 12 months                      \n",
       "5   gas consumption of the past 12 months                              \n",
       "6   electricity consumption of the last month                          \n",
       "7   date of activation of the contract                                 \n",
       "8   registered date of the end of the contract                         \n",
       "9   date of first contract of the client                               \n",
       "10  date of last modification of the product                           \n",
       "11  date of the next contract renewal                                  \n",
       "12  forecasted electricity bill baseline for next month                \n",
       "13  forecasted electricity bill baseline for calendar year             \n",
       "14  forecasted electricity bill baseline for 12 months                 \n",
       "15  forecasted electricity consumption for next month                  \n",
       "16  forecasted electricity consumption for next 12 months              \n",
       "17  forecasted electricity consumption for next calendar year          \n",
       "18  forecasted value of current discount                               \n",
       "19  forecasted bill of meter rental for the next 12 months             \n",
       "20  forecasted energy price for 1st period                             \n",
       "21  forecasted energy price for 2nd period                             \n",
       "22  forecasted power price for 1st period                              \n",
       "23  indicated if client is also a gas client                           \n",
       "24  current paid consumption                                           \n",
       "25  gross margin on power subscription                                 \n",
       "26  net margin on power subscription                                   \n",
       "27  number of active products and services                             \n",
       "28  total net margin                                                   \n",
       "29  antiquity of the client (in number of years)                       \n",
       "30  code of the electricity campaign the customer first subscribed to  \n",
       "31  subscribed power                                                   \n",
       "32  reference date                                                     \n",
       "33  price of energy for the 1st period                                 \n",
       "34  price of energy for the 2nd period                                 \n",
       "35  price of energy for the 3rd period                                 \n",
       "36  price of power for the 1st period                                  \n",
       "37  price of power for the 2nd period                                  \n",
       "38  price of power for the 3rd period                                  \n",
       "39  has the client churned over the next 3 months                      "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dictionary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "#geting the datatype of each column\n",
    "data_dtypes = pd.DataFrame(data2.dtypes, columns=['dtypes'])\n",
    "data_dtypes = data_dtypes.reset_index()\n",
    "data_dtypes['name'] = data_dtypes['index']\n",
    "data_dtypes = data_dtypes[['name', 'dtypes']]\n",
    "data_dtypes['first_value'] = data2.loc[0].values\n",
    "preview = data_dtypes.merge(dictionary, on='name', how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>dtypes</th>\n",
       "      <th>first_value</th>\n",
       "      <th>description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>id</td>\n",
       "      <td>object</td>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>contact id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>channel_sales</td>\n",
       "      <td>object</td>\n",
       "      <td>lmkebamcaaclubfxadlmueccxoimlema</td>\n",
       "      <td>code of the sales channel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>cons_12m</td>\n",
       "      <td>int64</td>\n",
       "      <td>309275</td>\n",
       "      <td>electricity consumption of the past 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>cons_gas_12m</td>\n",
       "      <td>int64</td>\n",
       "      <td>0</td>\n",
       "      <td>gas consumption of the past 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cons_last_month</td>\n",
       "      <td>int64</td>\n",
       "      <td>10025</td>\n",
       "      <td>electricity consumption of the last month</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>date_activ</td>\n",
       "      <td>object</td>\n",
       "      <td>2012-11-07</td>\n",
       "      <td>date of activation of the contract</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>date_end</td>\n",
       "      <td>object</td>\n",
       "      <td>2016-11-06</td>\n",
       "      <td>registered date of the end of the contract</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>date_modif_prod</td>\n",
       "      <td>object</td>\n",
       "      <td>2012-11-07</td>\n",
       "      <td>date of last modification of the product</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>date_renewal</td>\n",
       "      <td>object</td>\n",
       "      <td>2015-11-09</td>\n",
       "      <td>date of the next contract renewal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>forecast_cons_12m</td>\n",
       "      <td>float64</td>\n",
       "      <td>26520.3</td>\n",
       "      <td>forecasted electricity consumption for next 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>forecast_cons_year</td>\n",
       "      <td>int64</td>\n",
       "      <td>10025</td>\n",
       "      <td>forecasted electricity consumption for next calendar year</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>forecast_discount_energy</td>\n",
       "      <td>float64</td>\n",
       "      <td>0</td>\n",
       "      <td>forecasted value of current discount</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>forecast_meter_rent_12m</td>\n",
       "      <td>float64</td>\n",
       "      <td>359.29</td>\n",
       "      <td>forecasted bill of meter rental for the next 12 months</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>forecast_price_energy_p1</td>\n",
       "      <td>float64</td>\n",
       "      <td>0.095919</td>\n",
       "      <td>forecasted energy price for 1st period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>forecast_price_energy_p2</td>\n",
       "      <td>float64</td>\n",
       "      <td>0.088347</td>\n",
       "      <td>forecasted energy price for 2nd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>forecast_price_pow_p1</td>\n",
       "      <td>float64</td>\n",
       "      <td>58.996</td>\n",
       "      <td>forecasted power price for 1st period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>has_gas</td>\n",
       "      <td>object</td>\n",
       "      <td>f</td>\n",
       "      <td>indicated if client is also a gas client</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>imp_cons</td>\n",
       "      <td>float64</td>\n",
       "      <td>831.8</td>\n",
       "      <td>current paid consumption</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>margin_gross_pow_ele</td>\n",
       "      <td>float64</td>\n",
       "      <td>-41.76</td>\n",
       "      <td>gross margin on power subscription</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>margin_net_pow_ele</td>\n",
       "      <td>float64</td>\n",
       "      <td>-41.76</td>\n",
       "      <td>net margin on power subscription</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>nb_prod_act</td>\n",
       "      <td>int64</td>\n",
       "      <td>1</td>\n",
       "      <td>number of active products and services</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>net_margin</td>\n",
       "      <td>float64</td>\n",
       "      <td>1732.36</td>\n",
       "      <td>total net margin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>num_years_antig</td>\n",
       "      <td>int64</td>\n",
       "      <td>3</td>\n",
       "      <td>antiquity of the client (in number of years)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>origin_up</td>\n",
       "      <td>object</td>\n",
       "      <td>ldkssxwpmemidmecebumciepifcamkci</td>\n",
       "      <td>code of the electricity campaign the customer first subscribed to</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>pow_max</td>\n",
       "      <td>float64</td>\n",
       "      <td>180</td>\n",
       "      <td>subscribed power</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>price_p1_var</td>\n",
       "      <td>float64</td>\n",
       "      <td>0.103449</td>\n",
       "      <td>price of energy for the 1st period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>price_p2_var</td>\n",
       "      <td>float64</td>\n",
       "      <td>0.0921149</td>\n",
       "      <td>price of energy for the 2nd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>price_p3_var</td>\n",
       "      <td>float64</td>\n",
       "      <td>0.0672412</td>\n",
       "      <td>price of energy for the 3rd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>price_p1_fix</td>\n",
       "      <td>float64</td>\n",
       "      <td>58.9565</td>\n",
       "      <td>price of power for the 1st period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>price_p2_fix</td>\n",
       "      <td>float64</td>\n",
       "      <td>36.3569</td>\n",
       "      <td>price of power for the 2nd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>price_p3_fix</td>\n",
       "      <td>float64</td>\n",
       "      <td>8.33705</td>\n",
       "      <td>price of power for the 3rd period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>churn</td>\n",
       "      <td>int64</td>\n",
       "      <td>0</td>\n",
       "      <td>has the client churned over the next 3 months</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        name   dtypes                       first_value  \\\n",
       "0   id                        object   48ada52261e7cf58715202705a0451c9   \n",
       "1   channel_sales             object   lmkebamcaaclubfxadlmueccxoimlema   \n",
       "2   cons_12m                  int64    309275                             \n",
       "3   cons_gas_12m              int64    0                                  \n",
       "4   cons_last_month           int64    10025                              \n",
       "5   date_activ                object   2012-11-07                         \n",
       "6   date_end                  object   2016-11-06                         \n",
       "7   date_modif_prod           object   2012-11-07                         \n",
       "8   date_renewal              object   2015-11-09                         \n",
       "9   forecast_cons_12m         float64  26520.3                            \n",
       "10  forecast_cons_year        int64    10025                              \n",
       "11  forecast_discount_energy  float64  0                                  \n",
       "12  forecast_meter_rent_12m   float64  359.29                             \n",
       "13  forecast_price_energy_p1  float64  0.095919                           \n",
       "14  forecast_price_energy_p2  float64  0.088347                           \n",
       "15  forecast_price_pow_p1     float64  58.996                             \n",
       "16  has_gas                   object   f                                  \n",
       "17  imp_cons                  float64  831.8                              \n",
       "18  margin_gross_pow_ele      float64 -41.76                              \n",
       "19  margin_net_pow_ele        float64 -41.76                              \n",
       "20  nb_prod_act               int64    1                                  \n",
       "21  net_margin                float64  1732.36                            \n",
       "22  num_years_antig           int64    3                                  \n",
       "23  origin_up                 object   ldkssxwpmemidmecebumciepifcamkci   \n",
       "24  pow_max                   float64  180                                \n",
       "25  price_p1_var              float64  0.103449                           \n",
       "26  price_p2_var              float64  0.0921149                          \n",
       "27  price_p3_var              float64  0.0672412                          \n",
       "28  price_p1_fix              float64  58.9565                            \n",
       "29  price_p2_fix              float64  36.3569                            \n",
       "30  price_p3_fix              float64  8.33705                            \n",
       "31  churn                     int64    0                                  \n",
       "\n",
       "                                                          description  \n",
       "0   contact id                                                         \n",
       "1   code of the sales channel                                          \n",
       "2   electricity consumption of the past 12 months                      \n",
       "3   gas consumption of the past 12 months                              \n",
       "4   electricity consumption of the last month                          \n",
       "5   date of activation of the contract                                 \n",
       "6   registered date of the end of the contract                         \n",
       "7   date of last modification of the product                           \n",
       "8   date of the next contract renewal                                  \n",
       "9   forecasted electricity consumption for next 12 months              \n",
       "10  forecasted electricity consumption for next calendar year          \n",
       "11  forecasted value of current discount                               \n",
       "12  forecasted bill of meter rental for the next 12 months             \n",
       "13  forecasted energy price for 1st period                             \n",
       "14  forecasted energy price for 2nd period                             \n",
       "15  forecasted power price for 1st period                              \n",
       "16  indicated if client is also a gas client                           \n",
       "17  current paid consumption                                           \n",
       "18  gross margin on power subscription                                 \n",
       "19  net margin on power subscription                                   \n",
       "20  number of active products and services                             \n",
       "21  total net margin                                                   \n",
       "22  antiquity of the client (in number of years)                       \n",
       "23  code of the electricity campaign the customer first subscribed to  \n",
       "24  subscribed power                                                   \n",
       "25  price of energy for the 1st period                                 \n",
       "26  price of energy for the 2nd period                                 \n",
       "27  price of energy for the 3rd period                                 \n",
       "28  price of power for the 1st period                                  \n",
       "29  price of power for the 2nd period                                  \n",
       "30  price of power for the 3rd period                                  \n",
       "31  has the client churned over the next 3 months                      "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "preview"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After analyzing the columns I made the following observation:\n",
    "* id - randomly generated object, no use in analysis'\n",
    "* origin_up - randomly generated object\n",
    "* channel_sales - randomly generated object\n",
    "* margin_ggross_pow_ele - redundant\n",
    "* date_modif_prod - redundant\n",
    "These columns will be dropped to advance the cleaning process"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dropping the above listed columns\n",
    "drop_list = ['id', 'channel_sales', 'margin_gross_pow_ele', 'origin_up', 'date_modif_prod']\n",
    "data2 = data2.drop(drop_list, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x21606402248>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Using sns.heatmap to visualize and identify which columns have empty values\n",
    "sns.heatmap(data2.isnull(), cbar=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "forecast_discount_energy    126\n",
       "forecast_price_energy_p1    126\n",
       "forecast_price_energy_p2    126\n",
       "forecast_price_pow_p1       126\n",
       "margin_net_pow_ele          13 \n",
       "net_margin                  15 \n",
       "pow_max                     3  \n",
       "price_p1_var                2  \n",
       "price_p2_var                2  \n",
       "price_p3_var                2  \n",
       "price_p1_fix                2  \n",
       "price_p2_fix                2  \n",
       "price_p3_fix                2  \n",
       "dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# From the visualization above the following columns contains missing values\n",
    "colz = ['forecast_discount_energy', 'forecast_price_energy_p1', 'forecast_price_energy_p2',\n",
    "        'forecast_price_pow_p1', 'margin_net_pow_ele', 'net_margin', 'pow_max', 'price_p1_var', 'price_p2_var', 'price_p3_var',\n",
    "       'price_p1_fix', 'price_p2_fix', 'price_p3_fix'\n",
    "       ]\n",
    "data2[colz].isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# I replaced the missing values with their respective mean values\n",
    "data2[colz] = data2[colz].fillna(data2[colz].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cons_12m                    0 \n",
       "cons_gas_12m                0 \n",
       "cons_last_month             0 \n",
       "date_activ                  0 \n",
       "date_end                    2 \n",
       "date_renewal                40\n",
       "forecast_cons_12m           0 \n",
       "forecast_cons_year          0 \n",
       "forecast_discount_energy    0 \n",
       "forecast_meter_rent_12m     0 \n",
       "forecast_price_energy_p1    0 \n",
       "forecast_price_energy_p2    0 \n",
       "forecast_price_pow_p1       0 \n",
       "has_gas                     0 \n",
       "imp_cons                    0 \n",
       "margin_net_pow_ele          0 \n",
       "nb_prod_act                 0 \n",
       "net_margin                  0 \n",
       "num_years_antig             0 \n",
       "pow_max                     0 \n",
       "price_p1_var                0 \n",
       "price_p2_var                0 \n",
       "price_p3_var                0 \n",
       "price_p1_fix                0 \n",
       "price_p2_fix                0 \n",
       "price_p3_fix                0 \n",
       "churn                       0 \n",
       "dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# I went ahead to check for any more missing values and discovered that date renewal and date end have missing values as well\n",
    "data2.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Having located the missing dates and with not enough information to fill them I opt to drop the rows\n",
    "# since they are a few missing dates compared with the overall and will not affect the outcome of the analysis\n",
    "data2 = data2[~data2['date_renewal'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cons_12m                    0\n",
       "cons_gas_12m                0\n",
       "cons_last_month             0\n",
       "date_activ                  0\n",
       "date_end                    0\n",
       "date_renewal                0\n",
       "forecast_cons_12m           0\n",
       "forecast_cons_year          0\n",
       "forecast_discount_energy    0\n",
       "forecast_meter_rent_12m     0\n",
       "forecast_price_energy_p1    0\n",
       "forecast_price_energy_p2    0\n",
       "forecast_price_pow_p1       0\n",
       "has_gas                     0\n",
       "imp_cons                    0\n",
       "margin_net_pow_ele          0\n",
       "nb_prod_act                 0\n",
       "net_margin                  0\n",
       "num_years_antig             0\n",
       "pow_max                     0\n",
       "price_p1_var                0\n",
       "price_p2_var                0\n",
       "price_p3_var                0\n",
       "price_p1_fix                0\n",
       "price_p2_fix                0\n",
       "price_p3_fix                0\n",
       "churn                       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Confirming that there are no empty values\n",
    "data2.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# changine the datatype of 'has_gas' column from string to int for easy analysis\n",
    "dictn = {'f':0, 't':1}\n",
    "data2['has_gas'].replace(dictn, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cons_12m</th>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <th>cons_last_month</th>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <th>forecast_cons_year</th>\n",
       "      <th>forecast_discount_energy</th>\n",
       "      <th>forecast_meter_rent_12m</th>\n",
       "      <th>forecast_price_energy_p1</th>\n",
       "      <th>forecast_price_energy_p2</th>\n",
       "      <th>forecast_price_pow_p1</th>\n",
       "      <th>has_gas</th>\n",
       "      <th>imp_cons</th>\n",
       "      <th>margin_net_pow_ele</th>\n",
       "      <th>nb_prod_act</th>\n",
       "      <th>net_margin</th>\n",
       "      <th>num_years_antig</th>\n",
       "      <th>pow_max</th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>cons_12m</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.471516</td>\n",
       "      <td>0.919554</td>\n",
       "      <td>0.165344</td>\n",
       "      <td>0.139389</td>\n",
       "      <td>-0.043705</td>\n",
       "      <td>0.085954</td>\n",
       "      <td>-0.033139</td>\n",
       "      <td>0.146284</td>\n",
       "      <td>-0.025143</td>\n",
       "      <td>0.230597</td>\n",
       "      <td>0.139266</td>\n",
       "      <td>-0.045542</td>\n",
       "      <td>0.308985</td>\n",
       "      <td>0.120908</td>\n",
       "      <td>0.008869</td>\n",
       "      <td>0.102281</td>\n",
       "      <td>-0.024964</td>\n",
       "      <td>0.144081</td>\n",
       "      <td>0.060848</td>\n",
       "      <td>-0.013276</td>\n",
       "      <td>0.064387</td>\n",
       "      <td>0.071176</td>\n",
       "      <td>-0.051895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <td>0.471516</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.447444</td>\n",
       "      <td>0.058960</td>\n",
       "      <td>0.057184</td>\n",
       "      <td>-0.015240</td>\n",
       "      <td>0.040488</td>\n",
       "      <td>-0.021236</td>\n",
       "      <td>0.075555</td>\n",
       "      <td>-0.025962</td>\n",
       "      <td>0.372730</td>\n",
       "      <td>0.060180</td>\n",
       "      <td>-0.008344</td>\n",
       "      <td>0.272056</td>\n",
       "      <td>0.058781</td>\n",
       "      <td>-0.008798</td>\n",
       "      <td>0.052146</td>\n",
       "      <td>-0.019075</td>\n",
       "      <td>0.077928</td>\n",
       "      <td>0.047465</td>\n",
       "      <td>-0.022349</td>\n",
       "      <td>0.042665</td>\n",
       "      <td>0.054629</td>\n",
       "      <td>-0.040865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cons_last_month</th>\n",
       "      <td>0.919554</td>\n",
       "      <td>0.447444</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.129936</td>\n",
       "      <td>0.151471</td>\n",
       "      <td>-0.037563</td>\n",
       "      <td>0.076138</td>\n",
       "      <td>-0.024003</td>\n",
       "      <td>0.123057</td>\n",
       "      <td>-0.019906</td>\n",
       "      <td>0.203387</td>\n",
       "      <td>0.153914</td>\n",
       "      <td>-0.037668</td>\n",
       "      <td>0.351098</td>\n",
       "      <td>0.097022</td>\n",
       "      <td>0.004942</td>\n",
       "      <td>0.089569</td>\n",
       "      <td>-0.017213</td>\n",
       "      <td>0.121402</td>\n",
       "      <td>0.048611</td>\n",
       "      <td>-0.010816</td>\n",
       "      <td>0.050950</td>\n",
       "      <td>0.056569</td>\n",
       "      <td>-0.047081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <td>0.165344</td>\n",
       "      <td>0.058960</td>\n",
       "      <td>0.129936</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.746228</td>\n",
       "      <td>0.011328</td>\n",
       "      <td>0.390804</td>\n",
       "      <td>-0.214830</td>\n",
       "      <td>0.242446</td>\n",
       "      <td>0.058809</td>\n",
       "      <td>0.062175</td>\n",
       "      <td>0.725350</td>\n",
       "      <td>-0.143414</td>\n",
       "      <td>0.013151</td>\n",
       "      <td>0.777129</td>\n",
       "      <td>0.064439</td>\n",
       "      <td>0.582459</td>\n",
       "      <td>-0.204099</td>\n",
       "      <td>0.247448</td>\n",
       "      <td>0.266314</td>\n",
       "      <td>0.084394</td>\n",
       "      <td>0.306512</td>\n",
       "      <td>0.247884</td>\n",
       "      <td>0.007848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>forecast_cons_year</th>\n",
       "      <td>0.139389</td>\n",
       "      <td>0.057184</td>\n",
       "      <td>0.151471</td>\n",
       "      <td>0.746228</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.010433</td>\n",
       "      <td>0.329207</td>\n",
       "      <td>-0.204455</td>\n",
       "      <td>0.223541</td>\n",
       "      <td>0.053754</td>\n",
       "      <td>0.038560</td>\n",
       "      <td>0.981763</td>\n",
       "      <td>-0.107331</td>\n",
       "      <td>0.013798</td>\n",
       "      <td>0.541688</td>\n",
       "      <td>0.066050</td>\n",
       "      <td>0.441420</td>\n",
       "      <td>-0.197866</td>\n",
       "      <td>0.227736</td>\n",
       "      <td>0.237886</td>\n",
       "      <td>0.069180</td>\n",
       "      <td>0.278630</td>\n",
       "      <td>0.216033</td>\n",
       "      <td>0.002844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>forecast_discount_energy</th>\n",
       "      <td>-0.043705</td>\n",
       "      <td>-0.015240</td>\n",
       "      <td>-0.037563</td>\n",
       "      <td>0.011328</td>\n",
       "      <td>-0.010433</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.021668</td>\n",
       "      <td>0.320746</td>\n",
       "      <td>0.047360</td>\n",
       "      <td>0.025148</td>\n",
       "      <td>0.003387</td>\n",
       "      <td>0.009350</td>\n",
       "      <td>0.150109</td>\n",
       "      <td>0.054640</td>\n",
       "      <td>0.022142</td>\n",
       "      <td>-0.073071</td>\n",
       "      <td>-0.024398</td>\n",
       "      <td>0.245578</td>\n",
       "      <td>0.027901</td>\n",
       "      <td>0.013782</td>\n",
       "      <td>0.017397</td>\n",
       "      <td>-0.018871</td>\n",
       "      <td>-0.005845</td>\n",
       "      <td>0.013702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>forecast_meter_rent_12m</th>\n",
       "      <td>0.085954</td>\n",
       "      <td>0.040488</td>\n",
       "      <td>0.076138</td>\n",
       "      <td>0.390804</td>\n",
       "      <td>0.329207</td>\n",
       "      <td>-0.021668</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.555408</td>\n",
       "      <td>0.633253</td>\n",
       "      <td>0.013737</td>\n",
       "      <td>0.038812</td>\n",
       "      <td>0.296259</td>\n",
       "      <td>0.001187</td>\n",
       "      <td>0.000476</td>\n",
       "      <td>0.342107</td>\n",
       "      <td>0.112319</td>\n",
       "      <td>0.600008</td>\n",
       "      <td>-0.525035</td>\n",
       "      <td>0.651662</td>\n",
       "      <td>0.782170</td>\n",
       "      <td>0.044829</td>\n",
       "      <td>0.814726</td>\n",
       "      <td>0.737528</td>\n",
       "      <td>0.030202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>forecast_price_energy_p1</th>\n",
       "      <td>-0.033139</td>\n",
       "      <td>-0.021236</td>\n",
       "      <td>-0.024003</td>\n",
       "      <td>-0.214830</td>\n",
       "      <td>-0.204455</td>\n",
       "      <td>0.320746</td>\n",
       "      <td>-0.555408</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.365104</td>\n",
       "      <td>0.389852</td>\n",
       "      <td>-0.028338</td>\n",
       "      <td>-0.163578</td>\n",
       "      <td>0.028137</td>\n",
       "      <td>0.025060</td>\n",
       "      <td>-0.186739</td>\n",
       "      <td>-0.199048</td>\n",
       "      <td>-0.344254</td>\n",
       "      <td>0.944308</td>\n",
       "      <td>-0.390119</td>\n",
       "      <td>-0.654464</td>\n",
       "      <td>0.336168</td>\n",
       "      <td>-0.684796</td>\n",
       "      <td>-0.631748</td>\n",
       "      <td>-0.003044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>forecast_price_energy_p2</th>\n",
       "      <td>0.146284</td>\n",
       "      <td>0.075555</td>\n",
       "      <td>0.123057</td>\n",
       "      <td>0.242446</td>\n",
       "      <td>0.223541</td>\n",
       "      <td>0.047360</td>\n",
       "      <td>0.633253</td>\n",
       "      <td>-0.365104</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.137077</td>\n",
       "      <td>0.064414</td>\n",
       "      <td>0.208953</td>\n",
       "      <td>0.073711</td>\n",
       "      <td>0.026234</td>\n",
       "      <td>0.252935</td>\n",
       "      <td>0.102157</td>\n",
       "      <td>0.330859</td>\n",
       "      <td>-0.331279</td>\n",
       "      <td>0.990284</td>\n",
       "      <td>0.806881</td>\n",
       "      <td>-0.104918</td>\n",
       "      <td>0.781175</td>\n",
       "      <td>0.793784</td>\n",
       "      <td>0.025447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>forecast_price_pow_p1</th>\n",
       "      <td>-0.025143</td>\n",
       "      <td>-0.025962</td>\n",
       "      <td>-0.019906</td>\n",
       "      <td>0.058809</td>\n",
       "      <td>0.053754</td>\n",
       "      <td>0.025148</td>\n",
       "      <td>0.013737</td>\n",
       "      <td>0.389852</td>\n",
       "      <td>-0.137077</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.045195</td>\n",
       "      <td>0.051640</td>\n",
       "      <td>-0.133714</td>\n",
       "      <td>-0.011375</td>\n",
       "      <td>-0.005906</td>\n",
       "      <td>-0.038687</td>\n",
       "      <td>0.051621</td>\n",
       "      <td>0.381891</td>\n",
       "      <td>-0.142282</td>\n",
       "      <td>-0.178434</td>\n",
       "      <td>0.928734</td>\n",
       "      <td>-0.036613</td>\n",
       "      <td>-0.297186</td>\n",
       "      <td>0.004092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>has_gas</th>\n",
       "      <td>0.230597</td>\n",
       "      <td>0.372730</td>\n",
       "      <td>0.203387</td>\n",
       "      <td>0.062175</td>\n",
       "      <td>0.038560</td>\n",
       "      <td>0.003387</td>\n",
       "      <td>0.038812</td>\n",
       "      <td>-0.028338</td>\n",
       "      <td>0.064414</td>\n",
       "      <td>-0.045195</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.045564</td>\n",
       "      <td>-0.008339</td>\n",
       "      <td>0.415493</td>\n",
       "      <td>0.073941</td>\n",
       "      <td>0.012764</td>\n",
       "      <td>0.035509</td>\n",
       "      <td>-0.024201</td>\n",
       "      <td>0.064523</td>\n",
       "      <td>0.056209</td>\n",
       "      <td>-0.037122</td>\n",
       "      <td>0.045636</td>\n",
       "      <td>0.067685</td>\n",
       "      <td>-0.031750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>imp_cons</th>\n",
       "      <td>0.139266</td>\n",
       "      <td>0.060180</td>\n",
       "      <td>0.153914</td>\n",
       "      <td>0.725350</td>\n",
       "      <td>0.981763</td>\n",
       "      <td>0.009350</td>\n",
       "      <td>0.296259</td>\n",
       "      <td>-0.163578</td>\n",
       "      <td>0.208953</td>\n",
       "      <td>0.051640</td>\n",
       "      <td>0.045564</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.093591</td>\n",
       "      <td>0.018948</td>\n",
       "      <td>0.540540</td>\n",
       "      <td>0.050909</td>\n",
       "      <td>0.406809</td>\n",
       "      <td>-0.155962</td>\n",
       "      <td>0.210779</td>\n",
       "      <td>0.213213</td>\n",
       "      <td>0.069190</td>\n",
       "      <td>0.245653</td>\n",
       "      <td>0.196060</td>\n",
       "      <td>0.003538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>margin_net_pow_ele</th>\n",
       "      <td>-0.045542</td>\n",
       "      <td>-0.008344</td>\n",
       "      <td>-0.037668</td>\n",
       "      <td>-0.143414</td>\n",
       "      <td>-0.107331</td>\n",
       "      <td>0.150109</td>\n",
       "      <td>0.001187</td>\n",
       "      <td>0.028137</td>\n",
       "      <td>0.073711</td>\n",
       "      <td>-0.133714</td>\n",
       "      <td>-0.008339</td>\n",
       "      <td>-0.093591</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.032704</td>\n",
       "      <td>-0.088902</td>\n",
       "      <td>-0.037964</td>\n",
       "      <td>-0.001195</td>\n",
       "      <td>0.031179</td>\n",
       "      <td>0.068549</td>\n",
       "      <td>0.089160</td>\n",
       "      <td>-0.137315</td>\n",
       "      <td>0.027389</td>\n",
       "      <td>0.115858</td>\n",
       "      <td>0.063362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nb_prod_act</th>\n",
       "      <td>0.308985</td>\n",
       "      <td>0.272056</td>\n",
       "      <td>0.351098</td>\n",
       "      <td>0.013151</td>\n",
       "      <td>0.013798</td>\n",
       "      <td>0.054640</td>\n",
       "      <td>0.000476</td>\n",
       "      <td>0.025060</td>\n",
       "      <td>0.026234</td>\n",
       "      <td>-0.011375</td>\n",
       "      <td>0.415493</td>\n",
       "      <td>0.018948</td>\n",
       "      <td>-0.032704</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.004105</td>\n",
       "      <td>0.009665</td>\n",
       "      <td>0.018625</td>\n",
       "      <td>0.023180</td>\n",
       "      <td>0.025461</td>\n",
       "      <td>-0.003404</td>\n",
       "      <td>-0.007522</td>\n",
       "      <td>-0.009744</td>\n",
       "      <td>-0.000174</td>\n",
       "      <td>-0.022427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>net_margin</th>\n",
       "      <td>0.120908</td>\n",
       "      <td>0.058781</td>\n",
       "      <td>0.097022</td>\n",
       "      <td>0.777129</td>\n",
       "      <td>0.541688</td>\n",
       "      <td>0.022142</td>\n",
       "      <td>0.342107</td>\n",
       "      <td>-0.186739</td>\n",
       "      <td>0.252935</td>\n",
       "      <td>-0.005906</td>\n",
       "      <td>0.073941</td>\n",
       "      <td>0.540540</td>\n",
       "      <td>-0.088902</td>\n",
       "      <td>0.004105</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.034518</td>\n",
       "      <td>0.456769</td>\n",
       "      <td>-0.179413</td>\n",
       "      <td>0.256496</td>\n",
       "      <td>0.286355</td>\n",
       "      <td>0.015631</td>\n",
       "      <td>0.302809</td>\n",
       "      <td>0.270366</td>\n",
       "      <td>0.029184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_years_antig</th>\n",
       "      <td>0.008869</td>\n",
       "      <td>-0.008798</td>\n",
       "      <td>0.004942</td>\n",
       "      <td>0.064439</td>\n",
       "      <td>0.066050</td>\n",
       "      <td>-0.073071</td>\n",
       "      <td>0.112319</td>\n",
       "      <td>-0.199048</td>\n",
       "      <td>0.102157</td>\n",
       "      <td>-0.038687</td>\n",
       "      <td>0.012764</td>\n",
       "      <td>0.050909</td>\n",
       "      <td>-0.037964</td>\n",
       "      <td>0.009665</td>\n",
       "      <td>0.034518</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.084753</td>\n",
       "      <td>-0.219995</td>\n",
       "      <td>0.104056</td>\n",
       "      <td>0.084892</td>\n",
       "      <td>-0.050655</td>\n",
       "      <td>0.121255</td>\n",
       "      <td>0.067733</td>\n",
       "      <td>-0.071519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pow_max</th>\n",
       "      <td>0.102281</td>\n",
       "      <td>0.052146</td>\n",
       "      <td>0.089569</td>\n",
       "      <td>0.582459</td>\n",
       "      <td>0.441420</td>\n",
       "      <td>-0.024398</td>\n",
       "      <td>0.600008</td>\n",
       "      <td>-0.344254</td>\n",
       "      <td>0.330859</td>\n",
       "      <td>0.051621</td>\n",
       "      <td>0.035509</td>\n",
       "      <td>0.406809</td>\n",
       "      <td>-0.001195</td>\n",
       "      <td>0.018625</td>\n",
       "      <td>0.456769</td>\n",
       "      <td>0.084753</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.334800</td>\n",
       "      <td>0.342802</td>\n",
       "      <td>0.423078</td>\n",
       "      <td>0.063298</td>\n",
       "      <td>0.465374</td>\n",
       "      <td>0.387466</td>\n",
       "      <td>0.009653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_p1_var</th>\n",
       "      <td>-0.024964</td>\n",
       "      <td>-0.019075</td>\n",
       "      <td>-0.017213</td>\n",
       "      <td>-0.204099</td>\n",
       "      <td>-0.197866</td>\n",
       "      <td>0.245578</td>\n",
       "      <td>-0.525035</td>\n",
       "      <td>0.944308</td>\n",
       "      <td>-0.331279</td>\n",
       "      <td>0.381891</td>\n",
       "      <td>-0.024201</td>\n",
       "      <td>-0.155962</td>\n",
       "      <td>0.031179</td>\n",
       "      <td>0.023180</td>\n",
       "      <td>-0.179413</td>\n",
       "      <td>-0.219995</td>\n",
       "      <td>-0.334800</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.351925</td>\n",
       "      <td>-0.619047</td>\n",
       "      <td>0.417967</td>\n",
       "      <td>-0.653000</td>\n",
       "      <td>-0.593093</td>\n",
       "      <td>0.003673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_p2_var</th>\n",
       "      <td>0.144081</td>\n",
       "      <td>0.077928</td>\n",
       "      <td>0.121402</td>\n",
       "      <td>0.247448</td>\n",
       "      <td>0.227736</td>\n",
       "      <td>0.027901</td>\n",
       "      <td>0.651662</td>\n",
       "      <td>-0.390119</td>\n",
       "      <td>0.990284</td>\n",
       "      <td>-0.142282</td>\n",
       "      <td>0.064523</td>\n",
       "      <td>0.210779</td>\n",
       "      <td>0.068549</td>\n",
       "      <td>0.025461</td>\n",
       "      <td>0.256496</td>\n",
       "      <td>0.104056</td>\n",
       "      <td>0.342802</td>\n",
       "      <td>-0.351925</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.829194</td>\n",
       "      <td>-0.105388</td>\n",
       "      <td>0.804115</td>\n",
       "      <td>0.815728</td>\n",
       "      <td>0.023999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_p3_var</th>\n",
       "      <td>0.060848</td>\n",
       "      <td>0.047465</td>\n",
       "      <td>0.048611</td>\n",
       "      <td>0.266314</td>\n",
       "      <td>0.237886</td>\n",
       "      <td>0.013782</td>\n",
       "      <td>0.782170</td>\n",
       "      <td>-0.654464</td>\n",
       "      <td>0.806881</td>\n",
       "      <td>-0.178434</td>\n",
       "      <td>0.056209</td>\n",
       "      <td>0.213213</td>\n",
       "      <td>0.089160</td>\n",
       "      <td>-0.003404</td>\n",
       "      <td>0.286355</td>\n",
       "      <td>0.084892</td>\n",
       "      <td>0.423078</td>\n",
       "      <td>-0.619047</td>\n",
       "      <td>0.829194</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.142461</td>\n",
       "      <td>0.974664</td>\n",
       "      <td>0.980370</td>\n",
       "      <td>0.038729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_p1_fix</th>\n",
       "      <td>-0.013276</td>\n",
       "      <td>-0.022349</td>\n",
       "      <td>-0.010816</td>\n",
       "      <td>0.084394</td>\n",
       "      <td>0.069180</td>\n",
       "      <td>0.017397</td>\n",
       "      <td>0.044829</td>\n",
       "      <td>0.336168</td>\n",
       "      <td>-0.104918</td>\n",
       "      <td>0.928734</td>\n",
       "      <td>-0.037122</td>\n",
       "      <td>0.069190</td>\n",
       "      <td>-0.137315</td>\n",
       "      <td>-0.007522</td>\n",
       "      <td>0.015631</td>\n",
       "      <td>-0.050655</td>\n",
       "      <td>0.063298</td>\n",
       "      <td>0.417967</td>\n",
       "      <td>-0.105388</td>\n",
       "      <td>-0.142461</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.002544</td>\n",
       "      <td>-0.259039</td>\n",
       "      <td>0.008285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_p2_fix</th>\n",
       "      <td>0.064387</td>\n",
       "      <td>0.042665</td>\n",
       "      <td>0.050950</td>\n",
       "      <td>0.306512</td>\n",
       "      <td>0.278630</td>\n",
       "      <td>-0.018871</td>\n",
       "      <td>0.814726</td>\n",
       "      <td>-0.684796</td>\n",
       "      <td>0.781175</td>\n",
       "      <td>-0.036613</td>\n",
       "      <td>0.045636</td>\n",
       "      <td>0.245653</td>\n",
       "      <td>0.027389</td>\n",
       "      <td>-0.009744</td>\n",
       "      <td>0.302809</td>\n",
       "      <td>0.121255</td>\n",
       "      <td>0.465374</td>\n",
       "      <td>-0.653000</td>\n",
       "      <td>0.804115</td>\n",
       "      <td>0.974664</td>\n",
       "      <td>-0.002544</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.926800</td>\n",
       "      <td>0.034570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_p3_fix</th>\n",
       "      <td>0.071176</td>\n",
       "      <td>0.054629</td>\n",
       "      <td>0.056569</td>\n",
       "      <td>0.247884</td>\n",
       "      <td>0.216033</td>\n",
       "      <td>-0.005845</td>\n",
       "      <td>0.737528</td>\n",
       "      <td>-0.631748</td>\n",
       "      <td>0.793784</td>\n",
       "      <td>-0.297186</td>\n",
       "      <td>0.067685</td>\n",
       "      <td>0.196060</td>\n",
       "      <td>0.115858</td>\n",
       "      <td>-0.000174</td>\n",
       "      <td>0.270366</td>\n",
       "      <td>0.067733</td>\n",
       "      <td>0.387466</td>\n",
       "      <td>-0.593093</td>\n",
       "      <td>0.815728</td>\n",
       "      <td>0.980370</td>\n",
       "      <td>-0.259039</td>\n",
       "      <td>0.926800</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.039854</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn</th>\n",
       "      <td>-0.051895</td>\n",
       "      <td>-0.040865</td>\n",
       "      <td>-0.047081</td>\n",
       "      <td>0.007848</td>\n",
       "      <td>0.002844</td>\n",
       "      <td>0.013702</td>\n",
       "      <td>0.030202</td>\n",
       "      <td>-0.003044</td>\n",
       "      <td>0.025447</td>\n",
       "      <td>0.004092</td>\n",
       "      <td>-0.031750</td>\n",
       "      <td>0.003538</td>\n",
       "      <td>0.063362</td>\n",
       "      <td>-0.022427</td>\n",
       "      <td>0.029184</td>\n",
       "      <td>-0.071519</td>\n",
       "      <td>0.009653</td>\n",
       "      <td>0.003673</td>\n",
       "      <td>0.023999</td>\n",
       "      <td>0.038729</td>\n",
       "      <td>0.008285</td>\n",
       "      <td>0.034570</td>\n",
       "      <td>0.039854</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          cons_12m  cons_gas_12m  cons_last_month  \\\n",
       "cons_12m                  1.000000  0.471516      0.919554          \n",
       "cons_gas_12m              0.471516  1.000000      0.447444          \n",
       "cons_last_month           0.919554  0.447444      1.000000          \n",
       "forecast_cons_12m         0.165344  0.058960      0.129936          \n",
       "forecast_cons_year        0.139389  0.057184      0.151471          \n",
       "forecast_discount_energy -0.043705 -0.015240     -0.037563          \n",
       "forecast_meter_rent_12m   0.085954  0.040488      0.076138          \n",
       "forecast_price_energy_p1 -0.033139 -0.021236     -0.024003          \n",
       "forecast_price_energy_p2  0.146284  0.075555      0.123057          \n",
       "forecast_price_pow_p1    -0.025143 -0.025962     -0.019906          \n",
       "has_gas                   0.230597  0.372730      0.203387          \n",
       "imp_cons                  0.139266  0.060180      0.153914          \n",
       "margin_net_pow_ele       -0.045542 -0.008344     -0.037668          \n",
       "nb_prod_act               0.308985  0.272056      0.351098          \n",
       "net_margin                0.120908  0.058781      0.097022          \n",
       "num_years_antig           0.008869 -0.008798      0.004942          \n",
       "pow_max                   0.102281  0.052146      0.089569          \n",
       "price_p1_var             -0.024964 -0.019075     -0.017213          \n",
       "price_p2_var              0.144081  0.077928      0.121402          \n",
       "price_p3_var              0.060848  0.047465      0.048611          \n",
       "price_p1_fix             -0.013276 -0.022349     -0.010816          \n",
       "price_p2_fix              0.064387  0.042665      0.050950          \n",
       "price_p3_fix              0.071176  0.054629      0.056569          \n",
       "churn                    -0.051895 -0.040865     -0.047081          \n",
       "\n",
       "                          forecast_cons_12m  forecast_cons_year  \\\n",
       "cons_12m                  0.165344           0.139389             \n",
       "cons_gas_12m              0.058960           0.057184             \n",
       "cons_last_month           0.129936           0.151471             \n",
       "forecast_cons_12m         1.000000           0.746228             \n",
       "forecast_cons_year        0.746228           1.000000             \n",
       "forecast_discount_energy  0.011328          -0.010433             \n",
       "forecast_meter_rent_12m   0.390804           0.329207             \n",
       "forecast_price_energy_p1 -0.214830          -0.204455             \n",
       "forecast_price_energy_p2  0.242446           0.223541             \n",
       "forecast_price_pow_p1     0.058809           0.053754             \n",
       "has_gas                   0.062175           0.038560             \n",
       "imp_cons                  0.725350           0.981763             \n",
       "margin_net_pow_ele       -0.143414          -0.107331             \n",
       "nb_prod_act               0.013151           0.013798             \n",
       "net_margin                0.777129           0.541688             \n",
       "num_years_antig           0.064439           0.066050             \n",
       "pow_max                   0.582459           0.441420             \n",
       "price_p1_var             -0.204099          -0.197866             \n",
       "price_p2_var              0.247448           0.227736             \n",
       "price_p3_var              0.266314           0.237886             \n",
       "price_p1_fix              0.084394           0.069180             \n",
       "price_p2_fix              0.306512           0.278630             \n",
       "price_p3_fix              0.247884           0.216033             \n",
       "churn                     0.007848           0.002844             \n",
       "\n",
       "                          forecast_discount_energy  forecast_meter_rent_12m  \\\n",
       "cons_12m                 -0.043705                  0.085954                  \n",
       "cons_gas_12m             -0.015240                  0.040488                  \n",
       "cons_last_month          -0.037563                  0.076138                  \n",
       "forecast_cons_12m         0.011328                  0.390804                  \n",
       "forecast_cons_year       -0.010433                  0.329207                  \n",
       "forecast_discount_energy  1.000000                 -0.021668                  \n",
       "forecast_meter_rent_12m  -0.021668                  1.000000                  \n",
       "forecast_price_energy_p1  0.320746                 -0.555408                  \n",
       "forecast_price_energy_p2  0.047360                  0.633253                  \n",
       "forecast_price_pow_p1     0.025148                  0.013737                  \n",
       "has_gas                   0.003387                  0.038812                  \n",
       "imp_cons                  0.009350                  0.296259                  \n",
       "margin_net_pow_ele        0.150109                  0.001187                  \n",
       "nb_prod_act               0.054640                  0.000476                  \n",
       "net_margin                0.022142                  0.342107                  \n",
       "num_years_antig          -0.073071                  0.112319                  \n",
       "pow_max                  -0.024398                  0.600008                  \n",
       "price_p1_var              0.245578                 -0.525035                  \n",
       "price_p2_var              0.027901                  0.651662                  \n",
       "price_p3_var              0.013782                  0.782170                  \n",
       "price_p1_fix              0.017397                  0.044829                  \n",
       "price_p2_fix             -0.018871                  0.814726                  \n",
       "price_p3_fix             -0.005845                  0.737528                  \n",
       "churn                     0.013702                  0.030202                  \n",
       "\n",
       "                          forecast_price_energy_p1  forecast_price_energy_p2  \\\n",
       "cons_12m                 -0.033139                  0.146284                   \n",
       "cons_gas_12m             -0.021236                  0.075555                   \n",
       "cons_last_month          -0.024003                  0.123057                   \n",
       "forecast_cons_12m        -0.214830                  0.242446                   \n",
       "forecast_cons_year       -0.204455                  0.223541                   \n",
       "forecast_discount_energy  0.320746                  0.047360                   \n",
       "forecast_meter_rent_12m  -0.555408                  0.633253                   \n",
       "forecast_price_energy_p1  1.000000                 -0.365104                   \n",
       "forecast_price_energy_p2 -0.365104                  1.000000                   \n",
       "forecast_price_pow_p1     0.389852                 -0.137077                   \n",
       "has_gas                  -0.028338                  0.064414                   \n",
       "imp_cons                 -0.163578                  0.208953                   \n",
       "margin_net_pow_ele        0.028137                  0.073711                   \n",
       "nb_prod_act               0.025060                  0.026234                   \n",
       "net_margin               -0.186739                  0.252935                   \n",
       "num_years_antig          -0.199048                  0.102157                   \n",
       "pow_max                  -0.344254                  0.330859                   \n",
       "price_p1_var              0.944308                 -0.331279                   \n",
       "price_p2_var             -0.390119                  0.990284                   \n",
       "price_p3_var             -0.654464                  0.806881                   \n",
       "price_p1_fix              0.336168                 -0.104918                   \n",
       "price_p2_fix             -0.684796                  0.781175                   \n",
       "price_p3_fix             -0.631748                  0.793784                   \n",
       "churn                    -0.003044                  0.025447                   \n",
       "\n",
       "                          forecast_price_pow_p1   has_gas  imp_cons  \\\n",
       "cons_12m                 -0.025143               0.230597  0.139266   \n",
       "cons_gas_12m             -0.025962               0.372730  0.060180   \n",
       "cons_last_month          -0.019906               0.203387  0.153914   \n",
       "forecast_cons_12m         0.058809               0.062175  0.725350   \n",
       "forecast_cons_year        0.053754               0.038560  0.981763   \n",
       "forecast_discount_energy  0.025148               0.003387  0.009350   \n",
       "forecast_meter_rent_12m   0.013737               0.038812  0.296259   \n",
       "forecast_price_energy_p1  0.389852              -0.028338 -0.163578   \n",
       "forecast_price_energy_p2 -0.137077               0.064414  0.208953   \n",
       "forecast_price_pow_p1     1.000000              -0.045195  0.051640   \n",
       "has_gas                  -0.045195               1.000000  0.045564   \n",
       "imp_cons                  0.051640               0.045564  1.000000   \n",
       "margin_net_pow_ele       -0.133714              -0.008339 -0.093591   \n",
       "nb_prod_act              -0.011375               0.415493  0.018948   \n",
       "net_margin               -0.005906               0.073941  0.540540   \n",
       "num_years_antig          -0.038687               0.012764  0.050909   \n",
       "pow_max                   0.051621               0.035509  0.406809   \n",
       "price_p1_var              0.381891              -0.024201 -0.155962   \n",
       "price_p2_var             -0.142282               0.064523  0.210779   \n",
       "price_p3_var             -0.178434               0.056209  0.213213   \n",
       "price_p1_fix              0.928734              -0.037122  0.069190   \n",
       "price_p2_fix             -0.036613               0.045636  0.245653   \n",
       "price_p3_fix             -0.297186               0.067685  0.196060   \n",
       "churn                     0.004092              -0.031750  0.003538   \n",
       "\n",
       "                          margin_net_pow_ele  nb_prod_act  net_margin  \\\n",
       "cons_12m                 -0.045542            0.308985     0.120908     \n",
       "cons_gas_12m             -0.008344            0.272056     0.058781     \n",
       "cons_last_month          -0.037668            0.351098     0.097022     \n",
       "forecast_cons_12m        -0.143414            0.013151     0.777129     \n",
       "forecast_cons_year       -0.107331            0.013798     0.541688     \n",
       "forecast_discount_energy  0.150109            0.054640     0.022142     \n",
       "forecast_meter_rent_12m   0.001187            0.000476     0.342107     \n",
       "forecast_price_energy_p1  0.028137            0.025060    -0.186739     \n",
       "forecast_price_energy_p2  0.073711            0.026234     0.252935     \n",
       "forecast_price_pow_p1    -0.133714           -0.011375    -0.005906     \n",
       "has_gas                  -0.008339            0.415493     0.073941     \n",
       "imp_cons                 -0.093591            0.018948     0.540540     \n",
       "margin_net_pow_ele        1.000000           -0.032704    -0.088902     \n",
       "nb_prod_act              -0.032704            1.000000     0.004105     \n",
       "net_margin               -0.088902            0.004105     1.000000     \n",
       "num_years_antig          -0.037964            0.009665     0.034518     \n",
       "pow_max                  -0.001195            0.018625     0.456769     \n",
       "price_p1_var              0.031179            0.023180    -0.179413     \n",
       "price_p2_var              0.068549            0.025461     0.256496     \n",
       "price_p3_var              0.089160           -0.003404     0.286355     \n",
       "price_p1_fix             -0.137315           -0.007522     0.015631     \n",
       "price_p2_fix              0.027389           -0.009744     0.302809     \n",
       "price_p3_fix              0.115858           -0.000174     0.270366     \n",
       "churn                     0.063362           -0.022427     0.029184     \n",
       "\n",
       "                          num_years_antig   pow_max  price_p1_var  \\\n",
       "cons_12m                  0.008869         0.102281 -0.024964       \n",
       "cons_gas_12m             -0.008798         0.052146 -0.019075       \n",
       "cons_last_month           0.004942         0.089569 -0.017213       \n",
       "forecast_cons_12m         0.064439         0.582459 -0.204099       \n",
       "forecast_cons_year        0.066050         0.441420 -0.197866       \n",
       "forecast_discount_energy -0.073071        -0.024398  0.245578       \n",
       "forecast_meter_rent_12m   0.112319         0.600008 -0.525035       \n",
       "forecast_price_energy_p1 -0.199048        -0.344254  0.944308       \n",
       "forecast_price_energy_p2  0.102157         0.330859 -0.331279       \n",
       "forecast_price_pow_p1    -0.038687         0.051621  0.381891       \n",
       "has_gas                   0.012764         0.035509 -0.024201       \n",
       "imp_cons                  0.050909         0.406809 -0.155962       \n",
       "margin_net_pow_ele       -0.037964        -0.001195  0.031179       \n",
       "nb_prod_act               0.009665         0.018625  0.023180       \n",
       "net_margin                0.034518         0.456769 -0.179413       \n",
       "num_years_antig           1.000000         0.084753 -0.219995       \n",
       "pow_max                   0.084753         1.000000 -0.334800       \n",
       "price_p1_var             -0.219995        -0.334800  1.000000       \n",
       "price_p2_var              0.104056         0.342802 -0.351925       \n",
       "price_p3_var              0.084892         0.423078 -0.619047       \n",
       "price_p1_fix             -0.050655         0.063298  0.417967       \n",
       "price_p2_fix              0.121255         0.465374 -0.653000       \n",
       "price_p3_fix              0.067733         0.387466 -0.593093       \n",
       "churn                    -0.071519         0.009653  0.003673       \n",
       "\n",
       "                          price_p2_var  price_p3_var  price_p1_fix  \\\n",
       "cons_12m                  0.144081      0.060848     -0.013276       \n",
       "cons_gas_12m              0.077928      0.047465     -0.022349       \n",
       "cons_last_month           0.121402      0.048611     -0.010816       \n",
       "forecast_cons_12m         0.247448      0.266314      0.084394       \n",
       "forecast_cons_year        0.227736      0.237886      0.069180       \n",
       "forecast_discount_energy  0.027901      0.013782      0.017397       \n",
       "forecast_meter_rent_12m   0.651662      0.782170      0.044829       \n",
       "forecast_price_energy_p1 -0.390119     -0.654464      0.336168       \n",
       "forecast_price_energy_p2  0.990284      0.806881     -0.104918       \n",
       "forecast_price_pow_p1    -0.142282     -0.178434      0.928734       \n",
       "has_gas                   0.064523      0.056209     -0.037122       \n",
       "imp_cons                  0.210779      0.213213      0.069190       \n",
       "margin_net_pow_ele        0.068549      0.089160     -0.137315       \n",
       "nb_prod_act               0.025461     -0.003404     -0.007522       \n",
       "net_margin                0.256496      0.286355      0.015631       \n",
       "num_years_antig           0.104056      0.084892     -0.050655       \n",
       "pow_max                   0.342802      0.423078      0.063298       \n",
       "price_p1_var             -0.351925     -0.619047      0.417967       \n",
       "price_p2_var              1.000000      0.829194     -0.105388       \n",
       "price_p3_var              0.829194      1.000000     -0.142461       \n",
       "price_p1_fix             -0.105388     -0.142461      1.000000       \n",
       "price_p2_fix              0.804115      0.974664     -0.002544       \n",
       "price_p3_fix              0.815728      0.980370     -0.259039       \n",
       "churn                     0.023999      0.038729      0.008285       \n",
       "\n",
       "                          price_p2_fix  price_p3_fix     churn  \n",
       "cons_12m                  0.064387      0.071176     -0.051895  \n",
       "cons_gas_12m              0.042665      0.054629     -0.040865  \n",
       "cons_last_month           0.050950      0.056569     -0.047081  \n",
       "forecast_cons_12m         0.306512      0.247884      0.007848  \n",
       "forecast_cons_year        0.278630      0.216033      0.002844  \n",
       "forecast_discount_energy -0.018871     -0.005845      0.013702  \n",
       "forecast_meter_rent_12m   0.814726      0.737528      0.030202  \n",
       "forecast_price_energy_p1 -0.684796     -0.631748     -0.003044  \n",
       "forecast_price_energy_p2  0.781175      0.793784      0.025447  \n",
       "forecast_price_pow_p1    -0.036613     -0.297186      0.004092  \n",
       "has_gas                   0.045636      0.067685     -0.031750  \n",
       "imp_cons                  0.245653      0.196060      0.003538  \n",
       "margin_net_pow_ele        0.027389      0.115858      0.063362  \n",
       "nb_prod_act              -0.009744     -0.000174     -0.022427  \n",
       "net_margin                0.302809      0.270366      0.029184  \n",
       "num_years_antig           0.121255      0.067733     -0.071519  \n",
       "pow_max                   0.465374      0.387466      0.009653  \n",
       "price_p1_var             -0.653000     -0.593093      0.003673  \n",
       "price_p2_var              0.804115      0.815728      0.023999  \n",
       "price_p3_var              0.974664      0.980370      0.038729  \n",
       "price_p1_fix             -0.002544     -0.259039      0.008285  \n",
       "price_p2_fix              1.000000      0.926800      0.034570  \n",
       "price_p3_fix              0.926800      1.000000      0.039854  \n",
       "churn                     0.034570      0.039854      1.000000  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Finding the correlation between the columns\n",
    "data2.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x21604712948>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "corr = data2.corr()\n",
    "mask = np.tril(np.ones_like(corr, dtype=np.bool), k=-1)\n",
    "new_data = corr.where(mask)\n",
    "fig, ax = plt.subplots(1, 1, figsize=(25, 10))\n",
    "sns.heatmap(new_data, annot=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
